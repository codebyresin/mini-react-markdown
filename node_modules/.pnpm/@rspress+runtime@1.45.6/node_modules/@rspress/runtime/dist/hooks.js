import * as __WEBPACK_EXTERNAL_MODULE_react__ from "react";
import * as __WEBPACK_EXTERNAL_MODULE_react_dom_7136dc57__ from "react-dom";
import * as __WEBPACK_EXTERNAL_MODULE_virtual_i18n_text_58811962__ from "virtual-i18n-text";
const DataContext = (0, __WEBPACK_EXTERNAL_MODULE_react__.createContext)({});
const ThemeContext = (0, __WEBPACK_EXTERNAL_MODULE_react__.createContext)({});
function usePageData() {
    const ctx = (0, __WEBPACK_EXTERNAL_MODULE_react__.useContext)(DataContext);
    return ctx.data;
}
function useLang() {
    const ctx = (0, __WEBPACK_EXTERNAL_MODULE_react__.useContext)(DataContext);
    return ctx.data.page.lang || '';
}
function useVersion() {
    const ctx = (0, __WEBPACK_EXTERNAL_MODULE_react__.useContext)(DataContext);
    return ctx.data.page.version || '';
}
function useDark() {
    const ctx = (0, __WEBPACK_EXTERNAL_MODULE_react__.useContext)(ThemeContext);
    return 'dark' === ctx.theme;
}
function useI18n() {
    const lang = useLang();
    return (0, __WEBPACK_EXTERNAL_MODULE_react__.useCallback)((key)=>__WEBPACK_EXTERNAL_MODULE_virtual_i18n_text_58811962__["default"][key][lang], [
        lang
    ]);
}
function useViewTransition(dom) {
    const [element, setElement] = (0, __WEBPACK_EXTERNAL_MODULE_react__.useState)(dom);
    (0, __WEBPACK_EXTERNAL_MODULE_react__.useLayoutEffect)(()=>{
        if (document.startViewTransition && element !== dom) document.startViewTransition(()=>{
            (0, __WEBPACK_EXTERNAL_MODULE_react_dom_7136dc57__.flushSync)(()=>{
                setElement(dom);
            });
            window.dispatchEvent(new Event('RspressReloadContent'));
        });
        else {
            (0, __WEBPACK_EXTERNAL_MODULE_react_dom_7136dc57__.flushSync)(()=>{
                setElement(dom);
            });
            window.dispatchEvent(new Event('RspressReloadContent'));
        }
    }, [
        dom
    ]);
    return element;
}
function useWindowSize(initialWidth, initialHeight) {
    const [size, setSize] = (0, __WEBPACK_EXTERNAL_MODULE_react__.useState)({
        width: initialWidth ?? ('undefined' == typeof window ? Number.POSITIVE_INFINITY : window.innerWidth),
        height: initialHeight ?? ('undefined' == typeof window ? Number.POSITIVE_INFINITY : window.innerHeight)
    });
    (0, __WEBPACK_EXTERNAL_MODULE_react__.useLayoutEffect)(()=>{
        const handleResize = ()=>{
            setSize({
                width: window.innerWidth,
                height: window.innerHeight
            });
        };
        window.addEventListener('resize', handleResize);
        return ()=>{
            window.removeEventListener('resize', handleResize);
        };
    }, []);
    return size;
}
export { DataContext, ThemeContext, useDark, useI18n, useLang, usePageData, useVersion, useViewTransition, useWindowSize };
