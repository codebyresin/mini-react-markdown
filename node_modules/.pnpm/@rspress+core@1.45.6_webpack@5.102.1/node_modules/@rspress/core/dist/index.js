import __rslib_shim_module__ from 'module';
const require = /*#__PURE__*/ __rslib_shim_module__.createRequire(import.meta.url);
import * as __WEBPACK_EXTERNAL_MODULE__rspress_plugin_container_syntax_12d3c700__ from "@rspress/plugin-container-syntax";
import * as __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__ from "@rspress/shared";
import * as __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__ from "node:fs/promises";
import * as __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__ from "node:path";
import * as __WEBPACK_EXTERNAL_MODULE_node_url_e96de089__ from "node:url";
import * as __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_less_4c557a99__ from "@rsbuild/plugin-less";
import * as __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_react_7b149ee4__ from "@rsbuild/plugin-react";
import * as __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_sass_b13a7d33__ from "@rsbuild/plugin-sass";
import * as __WEBPACK_EXTERNAL_MODULE__rspress_shared_constants_70084e62__ from "@rspress/shared/constants";
import * as __WEBPACK_EXTERNAL_MODULE_tinyglobby__ from "tinyglobby";
import * as __WEBPACK_EXTERNAL_MODULE_node_os_74b4b876__ from "node:os";
import * as __WEBPACK_EXTERNAL_MODULE_rspack_plugin_virtual_module_609978fd__ from "rspack-plugin-virtual-module";
import * as __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__ from "@rspress/shared/logger";
import * as __WEBPACK_EXTERNAL_MODULE__rspress_shared_node_utils_78947ce6__ from "@rspress/shared/node-utils";
import * as __WEBPACK_EXTERNAL_MODULE_lodash_es_18c59938__ from "lodash-es";
import * as __WEBPACK_EXTERNAL_MODULE_node_crypto_9ba42079__ from "node:crypto";
import * as __WEBPACK_EXTERNAL_MODULE__rspress_mdx_rs_d2f3021f__ from "@rspress/mdx-rs";
import * as __WEBPACK_EXTERNAL_MODULE_html_to_text_2c51ed38__ from "html-to-text";
import * as __WEBPACK_EXTERNAL_MODULE_node_fs_5ea92f0c__ from "node:fs";
import * as __WEBPACK_EXTERNAL_MODULE__mdx_js_mdx_b904bd09__ from "@mdx-js/mdx";
import * as __WEBPACK_EXTERNAL_MODULE_enhanced_resolve_bf4706da__ from "enhanced-resolve";
import * as __WEBPACK_EXTERNAL_MODULE_node_module_ab9f2194__ from "node:module";
import * as __WEBPACK_EXTERNAL_MODULE_picocolors__ from "picocolors";
import * as __WEBPACK_EXTERNAL_MODULE_react_helmet_async_048d06c6__ from "react-helmet-async";
import * as __WEBPACK_EXTERNAL_MODULE__rsbuild_core_1b356efc__ from "@rsbuild/core";
export * from "@rspress/shared";
function _check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function _class_apply_descriptor_get(receiver, descriptor) {
    if (descriptor.get) return descriptor.get.call(receiver);
    return descriptor.value;
}
function _class_apply_descriptor_set(receiver, descriptor, value) {
    if (descriptor.set) descriptor.set.call(receiver, value);
    else {
        if (!descriptor.writable) throw new TypeError("attempted to set read only private field");
        descriptor.value = value;
    }
}
function _class_extract_field_descriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
    return privateMap.get(receiver);
}
function _class_private_field_get(receiver, privateMap) {
    var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
    return _class_apply_descriptor_get(receiver, descriptor);
}
function _class_private_field_init(obj, privateMap, value) {
    _check_private_redeclaration(obj, privateMap);
    privateMap.set(obj, value);
}
function _class_private_field_set(receiver, privateMap, value) {
    var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
    _class_apply_descriptor_set(receiver, descriptor, value);
    return value;
}
var _config = /*#__PURE__*/ new WeakMap(), _plugins = /*#__PURE__*/ new WeakMap(), _isProd = /*#__PURE__*/ new WeakMap();
class PluginDriver {
    async init() {
        var _themeConfig_locales, _themeConfig_locales_, _themeConfig_locales1, _themeConfig_locales_1, _themeConfig_locales2;
        this.clearPlugins();
        const config = _class_private_field_get(this, _config);
        const themeConfig = (null == config ? void 0 : config.themeConfig) || {};
        const enableLastUpdated = (null == themeConfig ? void 0 : themeConfig.lastUpdated) || (null == themeConfig ? void 0 : null == (_themeConfig_locales = themeConfig.locales) ? void 0 : _themeConfig_locales.some((locale)=>locale.lastUpdated));
        const mediumZoomConfig = (null == config ? void 0 : config.mediumZoom) ?? true;
        const haveNavSidebarConfig = themeConfig.nav || themeConfig.sidebar || (null == (_themeConfig_locales1 = themeConfig.locales) ? void 0 : null == (_themeConfig_locales_ = _themeConfig_locales1[0]) ? void 0 : _themeConfig_locales_.nav) || (null == (_themeConfig_locales2 = themeConfig.locales) ? void 0 : null == (_themeConfig_locales_1 = _themeConfig_locales2[0]) ? void 0 : _themeConfig_locales_1.sidebar);
        if (enableLastUpdated) {
            const { pluginLastUpdated } = await import("@rspress/plugin-last-updated");
            this.addPlugin(pluginLastUpdated());
        }
        if (mediumZoomConfig) {
            const { pluginMediumZoom } = await import("@rspress/plugin-medium-zoom");
            this.addPlugin(pluginMediumZoom('object' == typeof mediumZoomConfig ? mediumZoomConfig : void 0));
        }
        this.addPlugin((0, __WEBPACK_EXTERNAL_MODULE__rspress_plugin_container_syntax_12d3c700__.pluginContainerSyntax)());
        if ((0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.isDevDebugMode)()) {
            const SourceBuildPlugin = await import("@rspress/theme-default/node/source-build-plugin.js").then((r)=>r.SourceBuildPlugin, ()=>null);
            if (SourceBuildPlugin) this.addPlugin(SourceBuildPlugin());
        }
        (config.plugins || []).forEach((plugin)=>{
            this.addPlugin(plugin);
        });
        if (!haveNavSidebarConfig) {
            const { pluginAutoNavSidebar } = await import("@rspress/plugin-auto-nav-sidebar");
            this.addPlugin(pluginAutoNavSidebar());
        }
    }
    addPlugin(plugin) {
        const existedIndex = _class_private_field_get(this, _plugins).findIndex((item)=>item.name === plugin.name);
        if (-1 !== existedIndex) throw new Error(`The plugin "${plugin.name}" has been registered`);
        _class_private_field_get(this, _plugins).push(plugin);
    }
    getPlugins() {
        return _class_private_field_get(this, _plugins);
    }
    clearPlugins() {
        _class_private_field_set(this, _plugins, []);
    }
    removePlugin(pluginName) {
        const index = _class_private_field_get(this, _plugins).findIndex((item)=>item.name === pluginName);
        if (-1 !== index) _class_private_field_get(this, _plugins).splice(index, 1);
    }
    async modifyConfig() {
        let config = _class_private_field_get(this, _config);
        for(let i = 0; i < _class_private_field_get(this, _plugins).length; i++){
            const plugin = _class_private_field_get(this, _plugins)[i];
            if ('function' == typeof plugin.config) config = await plugin.config(config || {}, {
                addPlugin: this.addPlugin.bind(this),
                removePlugin: (pluginName)=>{
                    const index = _class_private_field_get(this, _plugins).findIndex((item)=>item.name === pluginName);
                    this.removePlugin(pluginName);
                    if (index <= i && index > 0) i--;
                }
            }, _class_private_field_get(this, _isProd));
        }
        _class_private_field_set(this, _config, config);
        return _class_private_field_get(this, _config);
    }
    async beforeBuild() {
        return this._runParallelAsyncHook('beforeBuild', _class_private_field_get(this, _config) || {}, _class_private_field_get(this, _isProd));
    }
    async afterBuild() {
        return this._runParallelAsyncHook('afterBuild', _class_private_field_get(this, _config) || {}, _class_private_field_get(this, _isProd));
    }
    async modifySearchIndexData(pages) {
        return this._runParallelAsyncHook('modifySearchIndexData', pages, _class_private_field_get(this, _isProd));
    }
    async extendPageData(pageData) {
        return this._runParallelAsyncHook('extendPageData', pageData, _class_private_field_get(this, _isProd));
    }
    async addPages() {
        const result = await this._runParallelAsyncHook('addPages', _class_private_field_get(this, _config) || {}, _class_private_field_get(this, _isProd));
        return result.flat();
    }
    async routeGenerated(routes) {
        return this._runParallelAsyncHook('routeGenerated', routes, _class_private_field_get(this, _isProd));
    }
    async addRuntimeModules() {
        const result = await this._runParallelAsyncHook('addRuntimeModules', _class_private_field_get(this, _config) || {}, _class_private_field_get(this, _isProd));
        return result.reduce((prev, current)=>({
                ...prev,
                ...current
            }), {});
    }
    async addSSGRoutes() {
        const result = await this._runParallelAsyncHook('addSSGRoutes', _class_private_field_get(this, _config) || {}, _class_private_field_get(this, _isProd));
        return result.flat();
    }
    globalUIComponents() {
        const result = _class_private_field_get(this, _plugins).map((plugin)=>plugin.globalUIComponents || []);
        return result.flat();
    }
    globalStyles() {
        return _class_private_field_get(this, _plugins).filter((plugin)=>'string' == typeof plugin.globalStyles).map((plugin)=>plugin.globalStyles);
    }
    _runParallelAsyncHook(hookName, ...args) {
        return Promise.all(_class_private_field_get(this, _plugins).filter((plugin)=>'function' == typeof plugin[hookName]).map((plugin)=>plugin[hookName](...args)));
    }
    _runSerialAsyncHook(hookName, ...args) {
        return _class_private_field_get(this, _plugins).reduce(async (prev, plugin)=>{
            if ('function' == typeof plugin[hookName]) {
                await prev;
                return plugin[hookName](...args);
            }
            return prev;
        }, Promise.resolve());
    }
    constructor(config, isProd){
        _class_private_field_init(this, _config, {
            writable: true,
            value: void 0
        });
        _class_private_field_init(this, _plugins, {
            writable: true,
            value: void 0
        });
        _class_private_field_init(this, _isProd, {
            writable: true,
            value: void 0
        });
        _class_private_field_set(this, _config, config);
        _class_private_field_set(this, _isProd, isProd);
        _class_private_field_set(this, _plugins, []);
    }
}
const isProduction = ()=>'production' === process.env.NODE_ENV;
const importStatementRegex = /import\s+(.*?)\s+from\s+(['"])(.*?)(?:"|');?/gm;
const inlineThemeScript = `{
  const saved = localStorage.getItem('${__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.APPEARANCE_KEY}')
  const preferDark = window.matchMedia('(prefers-color-scheme: dark)').matches
  const isDark = !saved || saved === 'auto' ? preferDark : saved === 'dark'
  document.documentElement.classList.toggle('dark', isDark)
  document.documentElement.style.colorScheme = isDark ? 'dark' : 'light'
}`.replace(/\n/g, ';').replace(/\s{2,}/g, '');
const dirname = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].dirname((0, __WEBPACK_EXTERNAL_MODULE_node_url_e96de089__.fileURLToPath)(new URL(import.meta.url)));
const PACKAGE_ROOT = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(dirname, '..');
const CLIENT_ENTRY = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(PACKAGE_ROOT, 'dist', 'runtime', 'clientEntry.js');
const SSR_ENTRY = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(PACKAGE_ROOT, 'dist', 'runtime', 'ssrEntry.js');
const OUTPUT_DIR = 'doc_build';
const APP_HTML_MARKER = '<!--<?- DOC_CONTENT ?>-->';
const HEAD_MARKER = '<!--<?- HEAD ?>-->';
const META_GENERATOR = '<!--<?- GENERATOR ?>-->';
const HTML_START_TAG = '<html';
const BODY_START_TAG = '<body';
const DEFAULT_TITLE = 'Rspress';
const PUBLIC_DIR = 'public';
const TEMP_DIR = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(process.cwd(), 'node_modules', __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.RSPRESS_TEMP_DIR);
const isWindows = 'win32' === __WEBPACK_EXTERNAL_MODULE_node_os_74b4b876__["default"].platform();
function slash(p) {
    return p.replace(/\\/g, '/');
}
function normalizePath(id) {
    return __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].posix.normalize(isWindows ? slash(id) : id);
}
function getPageKey(route) {
    const cleanRoute = (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.removeLeadingSlash)(route);
    return cleanRoute.replace(/\//g, '_').replace(/\.[^.]+$/, '') || 'index';
}
const getRoutePathParts = (routePath, lang, version, langs, versions)=>{
    const hasTrailSlash = routePath.endsWith('/');
    let versionPart = '';
    let langPart = '';
    let purePathPart = '';
    const parts = routePath.split('/').filter(Boolean);
    if (version) {
        const versionToMatch = parts[0];
        if (versions.includes(versionToMatch)) {
            if (versionToMatch !== version) versionPart = versionToMatch;
            parts.shift();
        }
    }
    if (lang) {
        const langToMatch = parts[0];
        if (langs.includes(langToMatch)) {
            if (langToMatch !== lang) langPart = langToMatch;
            parts.shift();
        }
    }
    purePathPart = parts.join('/');
    return [
        versionPart,
        langPart,
        hasTrailSlash ? (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.addTrailingSlash)(purePathPart) : purePathPart
    ];
};
const normalizeRoutePath = (routePath, base, lang, version, langs, versions, extensions = __WEBPACK_EXTERNAL_MODULE__rspress_shared_constants_70084e62__.DEFAULT_PAGE_EXTENSIONS)=>{
    const [versionPart, langPart, purePathPart] = getRoutePathParts(routePath, lang, version, langs, versions);
    const extensionsWithoutDot = extensions.map((i)=>i.slice(1));
    const cleanExtensionPattern = new RegExp(`\\.(${extensionsWithoutDot.join('|')})$`, 'i');
    const normalizedRoutePath = (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.addLeadingSlash)([
        versionPart,
        langPart
    ].filter(Boolean).join('/') + (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.addLeadingSlash)(purePathPart)).replace(cleanExtensionPattern, '').replace(/\.html$/, '').replace(/\/index$/, '/');
    return {
        routePath: (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.withBase)(normalizedRoutePath, base),
        lang: langPart || lang,
        version: versionPart || version
    };
};
function RouteService_check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function RouteService_class_apply_descriptor_get(receiver, descriptor) {
    if (descriptor.get) return descriptor.get.call(receiver);
    return descriptor.value;
}
function RouteService_class_apply_descriptor_set(receiver, descriptor, value) {
    if (descriptor.set) descriptor.set.call(receiver, value);
    else {
        if (!descriptor.writable) throw new TypeError("attempted to set read only private field");
        descriptor.value = value;
    }
}
function RouteService_class_extract_field_descriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
    return privateMap.get(receiver);
}
function RouteService_class_private_field_get(receiver, privateMap) {
    var descriptor = RouteService_class_extract_field_descriptor(receiver, privateMap, "get");
    return RouteService_class_apply_descriptor_get(receiver, descriptor);
}
function RouteService_class_private_field_init(obj, privateMap, value) {
    RouteService_check_private_redeclaration(obj, privateMap);
    privateMap.set(obj, value);
}
function RouteService_class_private_field_set(receiver, privateMap, value) {
    var descriptor = RouteService_class_extract_field_descriptor(receiver, privateMap, "set");
    RouteService_class_apply_descriptor_set(receiver, descriptor, value);
    return value;
}
function _class_private_method_get(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) throw new TypeError("attempted to get private field on non-instance");
    return fn;
}
function _class_private_method_init(obj, privateSet) {
    RouteService_check_private_redeclaration(obj, privateSet);
    privateSet.add(obj);
}
function _define_property(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
var _scanDir = /*#__PURE__*/ new WeakMap(), _defaultLang = /*#__PURE__*/ new WeakMap(), _defaultVersion = /*#__PURE__*/ new WeakMap(), _extensions = /*#__PURE__*/ new WeakMap(), _langs = /*#__PURE__*/ new WeakMap(), _versions = /*#__PURE__*/ new WeakMap(), _include = /*#__PURE__*/ new WeakMap(), _exclude = /*#__PURE__*/ new WeakMap(), _base = /*#__PURE__*/ new WeakMap(), _tempDir = /*#__PURE__*/ new WeakMap(), _pluginDriver = /*#__PURE__*/ new WeakMap(), _writeTempFile = /*#__PURE__*/ new WeakSet(), _generateRouteInfo = /*#__PURE__*/ new WeakSet();
class RouteService {
    get extensions() {
        return RouteService_class_private_field_get(this, _extensions);
    }
    async init() {
        const extensions = RouteService_class_private_field_get(this, _extensions).map((i)=>i.slice(1));
        const files = (await (0, __WEBPACK_EXTERNAL_MODULE_tinyglobby__.glob)([
            `**/*.{${extensions.join(',')}}`,
            ...RouteService_class_private_field_get(this, _include)
        ], {
            cwd: RouteService_class_private_field_get(this, _scanDir),
            absolute: true,
            onlyFiles: true,
            ignore: [
                ...RouteService_class_private_field_get(this, _exclude),
                '**/node_modules/**',
                '**/.eslintrc.js',
                '**/.nx/**',
                `./${PUBLIC_DIR}/**`
            ]
        })).sort();
        files.forEach((filePath)=>{
            const fileRelativePath = normalizePath(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].relative(RouteService_class_private_field_get(this, _scanDir), filePath));
            const { routePath, lang, version } = this.normalizeRoutePath(fileRelativePath);
            const absolutePath = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(RouteService_class_private_field_get(this, _scanDir), fileRelativePath);
            const routeInfo = {
                routePath,
                absolutePath: normalizePath(absolutePath),
                relativePath: fileRelativePath,
                pageName: getPageKey(fileRelativePath),
                lang,
                version
            };
            this.addRoute(routeInfo);
        });
        const externalPages = await RouteService_class_private_field_get(this, _pluginDriver).addPages();
        await Promise.all(externalPages.map(async (route, index)=>{
            const { routePath, content, filepath } = route;
            if (filepath) {
                const routeInfo = _class_private_method_get(this, _generateRouteInfo, generateRouteInfo).call(this, routePath, filepath);
                this.addRoute(routeInfo);
                return;
            }
            if (content) {
                const filepath = await _class_private_method_get(this, _writeTempFile, writeTempFile).call(this, index, content);
                const routeInfo = _class_private_method_get(this, _generateRouteInfo, generateRouteInfo).call(this, routePath, filepath);
                this.addRoute(routeInfo);
            }
        }));
        await RouteService_class_private_field_get(this, _pluginDriver).routeGenerated(this.getRoutes());
    }
    addRoute(routeInfo) {
        const { routePath, absolutePath } = routeInfo;
        if (this.routeData.has(routePath)) {
            const preRouteExtIndex = RouteService_class_private_field_get(this, _extensions).indexOf(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].extname(this.routeData.get(routePath).absolutePath));
            const currRouteExtIndex = RouteService_class_private_field_get(this, _extensions).indexOf(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].extname(absolutePath));
            if (-1 !== currRouteExtIndex && (currRouteExtIndex < preRouteExtIndex || -1 === preRouteExtIndex)) this.routeData.set(routePath, routeInfo);
        } else this.routeData.set(routePath, routeInfo);
    }
    removeRoute(filePath) {
        const fileRelativePath = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].relative(RouteService_class_private_field_get(this, _scanDir), filePath);
        const { routePath } = this.normalizeRoutePath(fileRelativePath);
        this.routeData.delete(routePath);
    }
    getRoutes() {
        return Array.from(this.routeData.values());
    }
    isExistRoute(routePath) {
        const { routePath: normalizedRoute } = this.normalizeRoutePath(routePath);
        return Boolean(this.routeData.get(normalizedRoute));
    }
    isEmpty() {
        return 0 === this.routeData.size;
    }
    generateRoutesCode(isStaticImport = false) {
        return this.generateRoutesCodeByRouteMeta(this.getRoutes(), isStaticImport);
    }
    generateRoutesCodeByRouteMeta(routeMeta, isStaticImport) {
        return `
import React from 'react';
import { lazyWithPreload } from "react-lazy-with-preload";
${routeMeta.map((route, index)=>isStaticImport ? `import * as Route${index} from '${route.absolutePath}';` : `const Route${index} = lazyWithPreload(() => import('${route.absolutePath}'))`).join('\n')}
export const routes = [
${routeMeta.map((route, index)=>{
            const preload = isStaticImport ? `() => Route${index}` : `async () => {
        await Route${index}.preload();
        return import("${route.absolutePath}");
      }`;
            const component = isStaticImport ? `Route${index}.default` : `Route${index}`;
            return `{ path: '${route.routePath}', element: React.createElement(${component}), filePath: '${route.relativePath}', preload: ${preload}, lang: '${route.lang}', version: '${route.version}' }`;
        }).join(',\n')}
];
`;
    }
    getRoutePathParts(routePath) {
        return getRoutePathParts(routePath, RouteService_class_private_field_get(this, _defaultLang), RouteService_class_private_field_get(this, _defaultVersion), RouteService_class_private_field_get(this, _langs), RouteService_class_private_field_get(this, _versions));
    }
    normalizeRoutePath(routePath) {
        return normalizeRoutePath(routePath, RouteService_class_private_field_get(this, _base), RouteService_class_private_field_get(this, _defaultLang), RouteService_class_private_field_get(this, _defaultVersion), RouteService_class_private_field_get(this, _langs), RouteService_class_private_field_get(this, _versions), RouteService_class_private_field_get(this, _extensions));
    }
    constructor(scanDir, userConfig, tempDir, pluginDriver){
        var _userConfig_themeConfig;
        _class_private_method_init(this, _writeTempFile);
        _class_private_method_init(this, _generateRouteInfo);
        _define_property(this, "routeData", new Map());
        RouteService_class_private_field_init(this, _scanDir, {
            writable: true,
            value: void 0
        });
        RouteService_class_private_field_init(this, _defaultLang, {
            writable: true,
            value: void 0
        });
        RouteService_class_private_field_init(this, _defaultVersion, {
            writable: true,
            value: ''
        });
        RouteService_class_private_field_init(this, _extensions, {
            writable: true,
            value: []
        });
        RouteService_class_private_field_init(this, _langs, {
            writable: true,
            value: []
        });
        RouteService_class_private_field_init(this, _versions, {
            writable: true,
            value: []
        });
        RouteService_class_private_field_init(this, _include, {
            writable: true,
            value: []
        });
        RouteService_class_private_field_init(this, _exclude, {
            writable: true,
            value: []
        });
        RouteService_class_private_field_init(this, _base, {
            writable: true,
            value: ''
        });
        RouteService_class_private_field_init(this, _tempDir, {
            writable: true,
            value: ''
        });
        RouteService_class_private_field_init(this, _pluginDriver, {
            writable: true,
            value: void 0
        });
        const routeOptions = (null == userConfig ? void 0 : userConfig.route) || {};
        RouteService_class_private_field_set(this, _scanDir, scanDir);
        RouteService_class_private_field_set(this, _extensions, routeOptions.extensions || __WEBPACK_EXTERNAL_MODULE__rspress_shared_constants_70084e62__.DEFAULT_PAGE_EXTENSIONS);
        RouteService_class_private_field_set(this, _include, routeOptions.include || []);
        RouteService_class_private_field_set(this, _exclude, routeOptions.exclude || []);
        RouteService_class_private_field_set(this, _defaultLang, (null == userConfig ? void 0 : userConfig.lang) || '');
        RouteService_class_private_field_set(this, _langs, ((null == userConfig ? void 0 : userConfig.locales) ?? (null == userConfig ? void 0 : null == (_userConfig_themeConfig = userConfig.themeConfig) ? void 0 : _userConfig_themeConfig.locales) ?? []).map((item)=>item.lang));
        RouteService_class_private_field_set(this, _base, (null == userConfig ? void 0 : userConfig.base) || '');
        RouteService_class_private_field_set(this, _tempDir, tempDir);
        RouteService_class_private_field_set(this, _pluginDriver, pluginDriver);
        if (userConfig.multiVersion) {
            RouteService_class_private_field_set(this, _defaultVersion, userConfig.multiVersion.default || '');
            RouteService_class_private_field_set(this, _versions, userConfig.multiVersion.versions || []);
        }
    }
}
async function writeTempFile(index, content) {
    const tempFilePath = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(RouteService_class_private_field_get(this, _tempDir), `temp-${index}.mdx`);
    await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].writeFile(tempFilePath, content);
    return tempFilePath;
}
function generateRouteInfo(routePath, filepath) {
    const { routePath: normalizedPath, lang, version } = this.normalizeRoutePath(routePath);
    return {
        routePath: normalizedPath,
        absolutePath: normalizePath(filepath),
        relativePath: normalizePath(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].relative(RouteService_class_private_field_get(this, _scanDir), filepath)),
        pageName: getPageKey(routePath),
        lang,
        version
    };
}
let init_routeService = null;
async function initRouteService(options) {
    const { scanDir, config, runtimeTempDir, pluginDriver } = options;
    init_routeService = new RouteService(scanDir, config, runtimeTempDir, pluginDriver);
    await init_routeService.init();
    return init_routeService;
}
async function globalStylesVMPlugin(context) {
    const { config, pluginDriver } = context;
    const globalStylesByPlugins = pluginDriver.globalStyles();
    if (config.globalStyles) {
        const source = config.globalStyles;
        const styleContent = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].readFile(source, 'utf-8');
        const patchedStyleContent = styleContent.replace(/--modern-/g, '--rp-').replace(/\.modern-doc/g, '.rspress').replace(/\.modern-/g, '.rspress-');
        await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].writeFile(source, patchedStyleContent, 'utf-8');
    }
    const moduleContent = (await Promise.all([
        (null == config ? void 0 : config.globalStyles) || '',
        ...globalStylesByPlugins
    ].filter((source)=>source.length > 0).map(async (source)=>`import ${JSON.stringify(source)};`))).join('');
    return {
        [runtimeModule_RuntimeModuleID.GlobalStyles]: moduleContent
    };
}
async function globalUIComponentsVMPlugin(context) {
    const { config, pluginDriver } = context;
    let index = 0;
    const globalUIComponentsByPlugins = pluginDriver.globalUIComponents();
    const globalComponents = [
        ...(null == config ? void 0 : config.globalUIComponents) || [],
        ...globalUIComponentsByPlugins
    ];
    const moduleContent = globalComponents.map((source)=>{
        const name = `Comp_${index}`;
        if (Array.isArray(source)) return `import ${name} from ${JSON.stringify(source[0])};
const Props_${index++} = ${JSON.stringify(source[1])};\n`;
        index++;
        return `import ${name} from ${JSON.stringify(source)};\n`;
    }).concat(`export default [${Array.from({
        length: index
    }, (_, i)=>{
        if (Array.isArray(globalComponents[i])) return `[Comp_${i}, Props_${i}]`;
        return `Comp_${i}`;
    }).join(', ')}];`).join('');
    return {
        [runtimeModule_RuntimeModuleID.GlobalComponents]: moduleContent
    };
}
const DEFAULT_I18N_SOURCE = (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(process.cwd(), 'i18n.json');
function getI18nData(docConfig) {
    const { i18nSourcePath = DEFAULT_I18N_SOURCE } = docConfig;
    try {
        delete require.cache[i18nSourcePath];
        const i18nSource = require(i18nSourcePath);
        return i18nSource;
    } catch (e) {
        __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.debug('getI18nData Failed: \n', e);
        return {};
    }
}
function i18nVMPlugin(context) {
    const { config } = context;
    const i18nData = getI18nData(config);
    return {
        [runtimeModule_RuntimeModuleID.I18nText]: `export default ${JSON.stringify(i18nData, null, 2)}`
    };
}
async function routeVMPlugin(context) {
    const { routeService, isSSR } = context;
    if (!isSSR) return {
        [runtimeModule_RuntimeModuleID.RouteForClient]: routeService.generateRoutesCode(false),
        [runtimeModule_RuntimeModuleID.RouteForSSR]: ''
    };
    return {
        [runtimeModule_RuntimeModuleID.RouteForClient]: routeService.generateRoutesCode(false),
        [runtimeModule_RuntimeModuleID.RouteForSSR]: routeService.generateRoutesCode(true)
    };
}
async function searchHookVMPlugin(context) {
    const { config } = context;
    let content = 'export const onSearch = () => {};';
    let extname = '';
    if ('object' == typeof config.search && 'string' == typeof config.search.searchHooks) {
        content = `export * from '${config.search.searchHooks}'`;
        extname = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].extname(config.search.searchHooks);
    }
    return {
        [`${runtimeModule_RuntimeModuleID.SearchHooks}${extname}`]: content
    };
}
function createHash(str) {
    return (0, __WEBPACK_EXTERNAL_MODULE_node_crypto_9ba42079__.createHash)('sha256').update(str).digest('hex').slice(0, 8);
}
let flattenMdxContent_resolver;
let startFlatten = false;
const processor = (0, __WEBPACK_EXTERNAL_MODULE__mdx_js_mdx_b904bd09__.createProcessor)();
const { CachedInputFileSystem, ResolverFactory } = __WEBPACK_EXTERNAL_MODULE_enhanced_resolve_bf4706da__["default"];
const fileSystem = __WEBPACK_EXTERNAL_MODULE_node_fs_5ea92f0c__["default"];
async function resolveDepPath(importPath, importer, alias) {
    if (!flattenMdxContent_resolver) flattenMdxContent_resolver = ResolverFactory.createResolver({
        fileSystem: new CachedInputFileSystem(fileSystem, 0),
        extensions: [
            '.mdx',
            '.md'
        ],
        alias
    });
    const resolveResult = await new Promise((resolve, reject)=>{
        flattenMdxContent_resolver.resolve({
            importer
        }, importer, importPath, {}, (err, filePath)=>{
            if (err) return reject(err);
            if (!filePath) return reject(new Error(`Empty result when resolving ${importPath} from ${importer}`));
            return resolve(filePath);
        });
    });
    return resolveResult;
}
async function flattenMdxContent(content, basePath, alias) {
    const deps = [];
    const regex = new RegExp(importStatementRegex);
    if (!regex.test(content)) return {
        flattenContent: content,
        deps
    };
    if (!startFlatten) {
        flattenMdxContent_resolver = ResolverFactory.createResolver({
            fileSystem: new CachedInputFileSystem(fileSystem, 0),
            extensions: [
                '.mdx',
                '.md',
                '.js'
            ],
            alias
        });
        startFlatten = true;
    }
    let ast;
    let result = content;
    try {
        ast = processor.parse(content);
    } catch (e) {
        __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.debug('flattenMdxContent parse failed: \n', e);
        return {
            flattenContent: content,
            deps
        };
    }
    const importNodes = ast.children.filter((node)=>'mdxjsEsm' === node.type).flatMap((node)=>{
        var _node_data_estree, _node_data;
        return (null == (_node_data = node.data) ? void 0 : null == (_node_data_estree = _node_data.estree) ? void 0 : _node_data_estree.body) || [];
    }).filter((node)=>'ImportDeclaration' === node.type);
    for (const importNode of importNodes){
        const id = importNode.specifiers[0].local.name;
        const importPath = importNode.source.value;
        let absoluteImportPath;
        try {
            absoluteImportPath = await resolveDepPath(importPath, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].dirname(basePath), alias);
        } catch (_e) {
            continue;
        }
        if (__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.MDX_OR_MD_REGEXP.test(absoluteImportPath)) {
            const importedContent = __WEBPACK_EXTERNAL_MODULE_node_fs_5ea92f0c__["default"].readFileSync(absoluteImportPath, 'utf-8');
            const { flattenContent: replacedValue, deps: subDeps } = await flattenMdxContent(importedContent, absoluteImportPath, alias);
            result = result.replace(new RegExp(`import\\s+${id}\\s+from\\s+['"](${importPath})['"];?`), '').replace(new RegExp(`<${id}\\s*/>`, 'g'), ()=>replacedValue);
            deps.push(...subDeps, absoluteImportPath);
        }
    }
    return {
        flattenContent: result,
        deps
    };
}
function applyReplaceRules(code = '', replaceRules = []) {
    let result = code;
    for (const rule of replaceRules)result = result.replace(rule.search, rule.replace);
    return result;
}
function applyReplaceRulesToNestedObject(obj, replaceRules) {
    for(const key in obj)if ('string' == typeof obj[key]) obj[key] = applyReplaceRules(obj[key], replaceRules);
    else if ('object' == typeof obj[key] && null !== obj[key]) obj[key] = applyReplaceRulesToNestedObject(obj[key], replaceRules);
    return obj;
}
async function extractPageData(replaceRules, alias, domain, root, routeService, highlighterLangs, searchCodeBlocks) {
    const pageData = await Promise.all(routeService.getRoutes().map(async (route, index)=>{
        const defaultIndexInfo = {
            id: index,
            title: '',
            content: '',
            _html: '',
            routePath: route.routePath,
            lang: route.lang,
            toc: [],
            domain,
            frontmatter: {},
            version: route.version,
            _filepath: route.absolutePath,
            _relativePath: __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].relative(root, route.absolutePath).split(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].sep).join('/')
        };
        if (!__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.MDX_OR_MD_REGEXP.test(route.absolutePath)) return defaultIndexInfo;
        let content = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].readFile(route.absolutePath, 'utf8');
        const { frontmatter, content: strippedFrontMatter } = (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_node_utils_78947ce6__.loadFrontMatter)(content, route.absolutePath, root);
        applyReplaceRulesToNestedObject(frontmatter, replaceRules);
        const { flattenContent } = await flattenMdxContent(applyReplaceRules(strippedFrontMatter, replaceRules), route.absolutePath, alias);
        content = flattenContent.replace(importStatementRegex, '');
        const { html: rawHtml, title, toc: rawToc, languages } = await (0, __WEBPACK_EXTERNAL_MODULE__rspress_mdx_rs_d2f3021f__.compile)({
            value: content,
            filepath: route.absolutePath,
            development: 'production' !== process.env.NODE_ENV,
            root
        });
        function encodeHtml(html) {
            return html.replace(/<code>([\s\S]*?)<\/\s?code>/gm, function(_match, innerContent) {
                return `<code>${innerContent.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;')}</code>`;
            });
        }
        const html = encodeHtml(String(rawHtml));
        content = (0, __WEBPACK_EXTERNAL_MODULE_html_to_text_2c51ed38__.htmlToText)(html, {
            wordwrap: 80,
            selectors: [
                {
                    selector: 'a',
                    options: {
                        ignoreHref: true
                    }
                },
                {
                    selector: 'img',
                    format: 'skip'
                },
                {
                    selector: 'pre > code',
                    format: searchCodeBlocks ? 'block' : 'skip'
                },
                ...[
                    'h1',
                    'h2',
                    'h3',
                    'h4',
                    'h5',
                    'h6'
                ].map((tag)=>({
                        selector: tag,
                        options: {
                            uppercase: false
                        }
                    }))
            ],
            tables: true,
            longWordSplit: {
                forceWrapOnLimit: true
            }
        });
        if (content.startsWith(title)) content = content.slice(title.length);
        languages.forEach((lang)=>highlighterLangs.add(lang));
        const toc = rawToc.map((item)=>{
            const match = item.id.match(/-(\d+)$/);
            let position = -1;
            if (match) for(let i = 0; i < Number(match[1]); i++){
                position = content.indexOf(`\n${item.text}#\n\n`, position + 1);
                if (-1 === position) break;
            }
            return {
                ...item,
                charIndex: content.indexOf(`\n${item.text}#\n\n`, position + 1)
            };
        });
        return {
            ...defaultIndexInfo,
            title: frontmatter.title || title,
            toc,
            content,
            _html: html,
            frontmatter: {
                ...frontmatter,
                __content: void 0
            }
        };
    }));
    return pageData.filter(Boolean);
}
const highlightLanguages_require = (0, __WEBPACK_EXTERNAL_MODULE_node_module_ab9f2194__.createRequire)(import.meta.url);
let highlightLanguages_supportedLanguages;
function handleHighlightLanguages(highlightLanguages, defaultLanguages) {
    const aliases = {};
    if (highlightLanguages.size) {
        if (!highlightLanguages_supportedLanguages) {
            const langs = highlightLanguages_require('react-syntax-highlighter/dist/cjs/languages/prism/supported-languages').default;
            highlightLanguages_supportedLanguages = new Set(langs);
        }
        let useDeprecatedTypeWarning = true;
        const names = {};
        [
            ...__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.DEFAULT_HIGHLIGHT_LANGUAGES,
            ...defaultLanguages
        ].forEach((lang)=>{
            if (Array.isArray(lang)) {
                const [alias, name] = lang;
                names[alias] = name;
            } else if (useDeprecatedTypeWarning) {
                console.log(`${__WEBPACK_EXTERNAL_MODULE_picocolors__["default"].yellowBright('warning')} Automatic import is supported. \`highlightLanguages\` is now used only as alias, and string types will be ignored. \n`);
                useDeprecatedTypeWarning = false;
            }
        });
        [
            ...highlightLanguages.values()
        ].forEach((lang)=>{
            const name = names[lang];
            if (name && highlightLanguages_supportedLanguages.has(name)) {
                const temp = aliases[name] || (aliases[name] = []);
                if (!temp.includes(lang)) temp.push(lang);
                highlightLanguages.delete(lang);
                highlightLanguages.add(name);
                return;
            }
            if (!highlightLanguages_supportedLanguages.has(lang)) highlightLanguages.delete(lang);
        });
    }
    return aliases;
}
function normalizeThemeConfig(docConfig, pages = []) {
    const { locales: siteLocales, base = '', lang, replaceRules = [], multiVersion } = docConfig;
    const { versions = [] } = multiVersion || {};
    const hasMultiVersion = versions.length > 0;
    docConfig.themeConfig = docConfig.themeConfig || {};
    const { themeConfig } = docConfig;
    const locales = siteLocales ?? ((null == themeConfig ? void 0 : themeConfig.locales) || []);
    const i18nTextData = getI18nData(docConfig);
    const normalizeLinkPrefix = (link = '', currentLang = '')=>{
        const normalizedLink = (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.slash)(link);
        if (!currentLang || !link || (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.withoutBase)(normalizedLink, base).startsWith(`/${currentLang}`) || (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.isExternalUrl)(normalizedLink) || hasMultiVersion) return normalizedLink;
        return lang === currentLang ? normalizedLink : `/${currentLang}${(0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.addLeadingSlash)(normalizedLink)}`;
    };
    const getI18nText = (key = '', currentLang = '')=>{
        var _i18nTextData_key;
        const text = null == (_i18nTextData_key = i18nTextData[key]) ? void 0 : _i18nTextData_key[currentLang];
        return text || key;
    };
    const normalizeSidebar = (sidebar, currentLang = '')=>{
        const normalizedSidebar = {};
        if (!sidebar) return {};
        const normalizeSidebarItem = (item)=>{
            if ('object' == typeof item && 'dividerType' in item) return item;
            if ('object' == typeof item && 'sectionHeaderText' in item) {
                item.sectionHeaderText = applyReplaceRules(getI18nText(item.sectionHeaderText, currentLang), replaceRules);
                return item;
            }
            if ('object' == typeof item && 'items' in item) return {
                ...item,
                text: applyReplaceRules(getI18nText(item.text, currentLang), replaceRules),
                link: normalizeLinkPrefix(item.link),
                collapsed: item.collapsed ?? false,
                collapsible: item.collapsible ?? true,
                tag: item.tag,
                items: item.items.map((subItem)=>normalizeSidebarItem(subItem))
            };
            if ('string' == typeof item) {
                const normalizedItem = normalizeLinkPrefix(item, currentLang);
                const page = pages.find((page)=>page.routePath === (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.withBase)(normalizedItem, base));
                return {
                    text: applyReplaceRules((null == page ? void 0 : page.title) || '', replaceRules),
                    link: normalizedItem,
                    _fileKey: null == page ? void 0 : page._relativePath.replace(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].extname(page._relativePath), '')
                };
            }
            return {
                ...item,
                text: applyReplaceRules(getI18nText(item.text, currentLang), replaceRules),
                link: normalizeLinkPrefix(item.link),
                tag: item.tag
            };
        };
        const normalizeSidebar = (sidebar)=>{
            Object.keys(sidebar).forEach((key)=>{
                const value = sidebar[key];
                normalizedSidebar[key] = value.map(normalizeSidebarItem);
            });
        };
        normalizeSidebar(sidebar);
        return normalizedSidebar;
    };
    const normalizeNav = (nav, currentLang)=>{
        if (!nav) return [];
        const transformNavItem = (navItem)=>{
            const text = applyReplaceRules(getI18nText(navItem.text, currentLang), replaceRules);
            if ('link' in navItem) return {
                ...navItem,
                text,
                link: normalizeLinkPrefix(navItem.link, currentLang)
            };
            if ('items' in navItem) return {
                ...navItem,
                text,
                items: navItem.items.map((item)=>({
                        ...item,
                        text: applyReplaceRules(getI18nText(item.text, currentLang), replaceRules),
                        link: normalizeLinkPrefix(item.link, currentLang)
                    }))
            };
            return navItem;
        };
        if (Array.isArray(nav)) return nav.map(transformNavItem);
        return Object.entries(nav).reduce((acc, [key, value])=>{
            acc[key] = value.map(transformNavItem);
            return acc;
        }, {});
    };
    if (locales.length) themeConfig.locales = locales.map(({ lang: currentLang, label })=>{
        var _themeConfig_locales;
        const localeInThemeConfig = null == (_themeConfig_locales = themeConfig.locales) ? void 0 : _themeConfig_locales.find((locale)=>locale.lang === currentLang);
        return {
            lang: currentLang,
            label,
            ...localeInThemeConfig || {},
            sidebar: normalizeSidebar((null == localeInThemeConfig ? void 0 : localeInThemeConfig.sidebar) ?? themeConfig.sidebar, currentLang),
            nav: normalizeNav((null == localeInThemeConfig ? void 0 : localeInThemeConfig.nav) ?? themeConfig.nav, currentLang)
        };
    });
    else {
        themeConfig.sidebar = normalizeSidebar(null == themeConfig ? void 0 : themeConfig.sidebar);
        themeConfig.nav = normalizeNav(null == themeConfig ? void 0 : themeConfig.nav);
    }
    return themeConfig;
}
function deletePrivateField(obj) {
    if ('object' != typeof obj || null === obj) return obj;
    const newObj = {
        ...obj
    };
    for(const key in newObj)if (key.startsWith('_')) delete newObj[key];
    return newObj;
}
async function siteDataVMPlugin(context) {
    var _userConfig_themeConfig, _userConfig_multiVersion, _userConfig_multiVersion1, _userConfig_markdown, _userConfig_markdown1, _userConfig_markdown2, _siteData_pages_;
    const { config, alias, userDocRoot, routeService, pluginDriver } = context;
    const userConfig = config;
    const tempSearchObj = Object.assign({}, userConfig.search);
    if (tempSearchObj) tempSearchObj.searchHooks = void 0;
    const highlightLanguages = new Set();
    const replaceRules = (null == userConfig ? void 0 : userConfig.replaceRules) || [];
    const searchConfig = (null == userConfig ? void 0 : userConfig.search) || {};
    const domain = (null == searchConfig ? void 0 : searchConfig.mode) === 'remote' ? searchConfig.domain ?? '' : '';
    const searchCodeBlocks = 'codeBlocks' in searchConfig ? Boolean(searchConfig.codeBlocks) : false;
    const pages = await extractPageData(replaceRules, alias, domain, userDocRoot, routeService, highlightLanguages, searchCodeBlocks);
    await pluginDriver.modifySearchIndexData(pages);
    const versioned = userConfig.search && 'remote' !== userConfig.search.mode && userConfig.search.versioned;
    const groupedPages = (0, __WEBPACK_EXTERNAL_MODULE_lodash_es_18c59938__.groupBy)(pages, (page)=>{
        var _page_frontmatter;
        if ((null == (_page_frontmatter = page.frontmatter) ? void 0 : _page_frontmatter.pageType) === 'home') return 'noindex';
        const version = versioned ? page.version : '';
        const lang = page.lang || '';
        return `${version}###${lang}`;
    });
    delete groupedPages.noindex;
    const indexHashByGroup = {};
    await Promise.all(Object.keys(groupedPages).map(async (group)=>{
        const stringifiedIndex = JSON.stringify(groupedPages[group].map(deletePrivateField));
        const indexHash = createHash(stringifiedIndex);
        indexHashByGroup[group] = indexHash;
        const [version, lang] = group.split('###');
        const indexVersion = version ? `.${version.replace('.', '_')}` : '';
        const indexLang = lang ? `.${lang}` : '';
        await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].mkdir(TEMP_DIR, {
            recursive: true
        });
        await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].writeFile(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(TEMP_DIR, `${__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.SEARCH_INDEX_NAME}${indexVersion}${indexLang}.${indexHash}.json`), stringifiedIndex);
    }));
    await Promise.all(pages.map(async (pageData)=>pluginDriver.extendPageData(pageData)));
    const siteData = {
        title: (null == userConfig ? void 0 : userConfig.title) || '',
        description: (null == userConfig ? void 0 : userConfig.description) || '',
        icon: (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_node_utils_78947ce6__.getIconUrlPath)(null == userConfig ? void 0 : userConfig.icon) || '',
        route: (null == userConfig ? void 0 : userConfig.route) || {},
        themeConfig: normalizeThemeConfig(userConfig, pages),
        base: (null == userConfig ? void 0 : userConfig.base) || '/',
        lang: (null == userConfig ? void 0 : userConfig.lang) || '',
        locales: (null == userConfig ? void 0 : userConfig.locales) || (null == (_userConfig_themeConfig = userConfig.themeConfig) ? void 0 : _userConfig_themeConfig.locales) || [],
        logo: (null == userConfig ? void 0 : userConfig.logo) || '',
        logoText: (null == userConfig ? void 0 : userConfig.logoText) || '',
        ssg: Boolean((null == userConfig ? void 0 : userConfig.ssg) ?? true),
        multiVersion: {
            default: (null == userConfig ? void 0 : null == (_userConfig_multiVersion = userConfig.multiVersion) ? void 0 : _userConfig_multiVersion.default) || '',
            versions: (null == userConfig ? void 0 : null == (_userConfig_multiVersion1 = userConfig.multiVersion) ? void 0 : _userConfig_multiVersion1.versions) || []
        },
        search: tempSearchObj ?? {
            mode: 'local'
        },
        pages: pages.map((page)=>{
            const { content, id, domain, _filepath, _html, ...rest } = page;
            return isProduction() ? rest : {
                ...rest,
                _filepath
            };
        }),
        markdown: {
            showLineNumbers: (null == userConfig ? void 0 : null == (_userConfig_markdown = userConfig.markdown) ? void 0 : _userConfig_markdown.showLineNumbers) ?? false,
            defaultWrapCode: (null == userConfig ? void 0 : null == (_userConfig_markdown1 = userConfig.markdown) ? void 0 : _userConfig_markdown1.defaultWrapCode) ?? false,
            codeHighlighter: (null == userConfig ? void 0 : null == (_userConfig_markdown2 = userConfig.markdown) ? void 0 : _userConfig_markdown2.codeHighlighter) || 'prism'
        }
    };
    const { highlightLanguages: defaultLanguages = [] } = config.markdown || {};
    if (Array.isArray(null == (_siteData_pages_ = siteData.pages[0]) ? void 0 : _siteData_pages_.extraHighlightLanguages)) siteData.pages[0].extraHighlightLanguages.forEach((lang)=>highlightLanguages.add(lang));
    const aliases = handleHighlightLanguages(highlightLanguages, defaultLanguages);
    const sortedAliases = Object.fromEntries(Object.entries(aliases).sort());
    const sortedHighlightLanguages = Array.from(highlightLanguages).sort();
    return {
        [`${runtimeModule_RuntimeModuleID.SiteData}.mjs`]: `export default ${JSON.stringify(siteData, null, 2)}`,
        [runtimeModule_RuntimeModuleID.SearchIndexHash]: `export default ${JSON.stringify(indexHashByGroup, null, 2)}`,
        [runtimeModule_RuntimeModuleID.PrismLanguages]: `export const aliases = ${JSON.stringify(sortedAliases, null, 2)};
    export const languages = {
      ${sortedHighlightLanguages.map((lang)=>`"${lang}": require(
          "react-syntax-highlighter/dist/cjs/languages/prism/${lang}"
        ).default`)}
    }`
    };
}
const runtimeModuleFactory = [
    routeVMPlugin,
    siteDataVMPlugin,
    globalUIComponentsVMPlugin,
    globalStylesVMPlugin,
    i18nVMPlugin,
    searchHookVMPlugin
];
function rsbuildPluginDocVM(factoryContext) {
    const { pluginDriver } = factoryContext;
    return {
        name: 'rsbuild-plugin-doc-vm',
        setup (api) {
            api.modifyBundlerChain(async (bundlerChain, { target })=>{
                const isServer = 'node' === target;
                const alias = bundlerChain.resolve.alias.entries();
                const runtimeModule = {};
                for (const factory of runtimeModuleFactory){
                    const moduleResult = await factory({
                        ...factoryContext,
                        isSSR: isServer,
                        alias: alias
                    });
                    Object.assign(runtimeModule, moduleResult);
                }
                const modulesByPlugin = await pluginDriver.addRuntimeModules();
                Object.keys(modulesByPlugin).forEach((key)=>{
                    if (runtimeModule[key]) throw new Error(`The runtime module ${key} is duplicated, please check your plugin`);
                    runtimeModule[key] = modulesByPlugin[key];
                });
                bundlerChain.plugin('rspress-runtime-module').use(new __WEBPACK_EXTERNAL_MODULE_rspack_plugin_virtual_module_609978fd__.RspackVirtualModulePlugin(runtimeModule, factoryContext.runtimeTempDir));
            });
        }
    };
}
var runtimeModule_RuntimeModuleID = /*#__PURE__*/ function(RuntimeModuleID) {
    RuntimeModuleID["GlobalStyles"] = "virtual-global-styles";
    RuntimeModuleID["GlobalComponents"] = "virtual-global-components";
    RuntimeModuleID["RouteForClient"] = "virtual-routes";
    RuntimeModuleID["RouteForSSR"] = "virtual-routes-ssr";
    RuntimeModuleID["SiteData"] = "virtual-site-data";
    RuntimeModuleID["SearchIndexHash"] = "virtual-search-index-hash";
    RuntimeModuleID["I18nText"] = "virtual-i18n-text";
    RuntimeModuleID["SearchHooks"] = "virtual-search-hooks";
    RuntimeModuleID["PrismLanguages"] = "virtual-prism-languages";
    return RuntimeModuleID;
}({});
async function writeSearchIndex(config) {
    var _config_search;
    if ((null == config ? void 0 : config.search) === false) return;
    const cwd = process.cwd();
    const searchIndexFiles = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].readdir(TEMP_DIR);
    const outDir = (null == config ? void 0 : config.outDir) ?? (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(cwd, OUTPUT_DIR);
    const targetDir = (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(outDir, 'static');
    await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].mkdir(targetDir, {
        recursive: true
    });
    let searchIndexData = '[]';
    let scanning = false;
    for (const searchIndexFile of searchIndexFiles){
        if (!searchIndexFile.includes(__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.SEARCH_INDEX_NAME) || !searchIndexFile.endsWith('.json')) continue;
        const source = (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(TEMP_DIR, searchIndexFile);
        const target = (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(targetDir, searchIndexFile);
        const searchIndex = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].readFile((0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(TEMP_DIR, searchIndexFile), 'utf-8');
        searchIndexData = `${searchIndexData.slice(0, -1)}${scanning ? ',' : ''}${searchIndex.slice(1)}`;
        await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].rename(source, target);
        scanning = true;
    }
    if (isProduction() && (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.isSCM)() && (null == config ? void 0 : null == (_config_search = config.search) ? void 0 : _config_search.mode) === 'remote') {
        const { apiUrl, indexName } = config.search;
        try {
            await fetch(`${apiUrl}?index=${indexName}`, {
                method: 'PUT',
                body: searchIndexData,
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.info(__WEBPACK_EXTERNAL_MODULE_picocolors__["default"].green(`[doc-tools] Search index uploaded to ${apiUrl}, indexName: ${indexName}`));
        } catch (e) {
            __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.info(__WEBPACK_EXTERNAL_MODULE_picocolors__["default"].red(`[doc-tools] Upload search index \`${indexName}\` failed:\n ${e}`));
        }
    }
}
function serveSearchIndexMiddleware(config) {
    return (req, res, next)=>{
        var _req_url;
        const searchIndexRequestMatch = `/${__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.SEARCH_INDEX_NAME}.`;
        if (null == (_req_url = req.url) ? void 0 : _req_url.includes(searchIndexRequestMatch)) {
            res.setHeader('Content-Type', 'application/json');
            const outDir = (null == config ? void 0 : config.outDir) ?? (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(process.cwd(), OUTPUT_DIR);
            const searchIndexFile = req.url.split('/').pop();
            (0, __WEBPACK_EXTERNAL_MODULE_node_fs_5ea92f0c__.createReadStream)((0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(outDir, 'static', searchIndexFile), 'utf-8').pipe(res, {
                end: true
            });
        } else null == next || next();
    };
}
async function pathExists(path) {
    try {
        await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].access(path);
        return true;
    } catch  {
        return false;
    }
}
async function readJson(path) {
    const raw = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].readFile(path, 'utf8');
    return JSON.parse(raw);
}
const { CachedInputFileSystem: detectReactVersion_CachedInputFileSystem, ResolverFactory: detectReactVersion_ResolverFactory } = __WEBPACK_EXTERNAL_MODULE_enhanced_resolve_bf4706da__["default"];
const DEFAULT_REACT_VERSION = 18;
async function detectReactVersion() {
    const cwd = process.cwd();
    const reactPath = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(cwd, 'node_modules', 'react');
    if (await pathExists(reactPath)) {
        var _reactPkg_version;
        const reactPkg = await readJson(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(reactPath, 'package.json'));
        const version = Number(null == (_reactPkg_version = reactPkg.version) ? void 0 : _reactPkg_version.split('.')[0]);
        return version;
    }
    return DEFAULT_REACT_VERSION;
}
async function resolveReactAlias(reactVersion, isSSR) {
    const basedir = reactVersion === DEFAULT_REACT_VERSION ? PACKAGE_ROOT : process.cwd();
    const libPaths = [
        'react',
        'react/jsx-runtime',
        'react/jsx-dev-runtime',
        'react-dom',
        'react-dom/server'
    ];
    if (reactVersion >= DEFAULT_REACT_VERSION) libPaths.push('react-dom/client');
    const alias = {};
    const resolver = detectReactVersion_ResolverFactory.createResolver({
        fileSystem: new detectReactVersion_CachedInputFileSystem(__WEBPACK_EXTERNAL_MODULE_node_fs_5ea92f0c__["default"], 0),
        extensions: [
            '.js'
        ],
        alias,
        conditionNames: isSSR ? [
            '...'
        ] : [
            'browser',
            '...'
        ]
    });
    await Promise.all(libPaths.map(async (lib)=>{
        try {
            alias[lib] = await new Promise((resolve, reject)=>{
                resolver.resolve({
                    importer: basedir
                }, basedir, lib, {}, (err, filePath)=>{
                    if (err || !filePath) return reject(err);
                    return resolve(filePath);
                });
            });
        } catch (e) {
            __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.warn(`${lib} not found: \n`, e);
        }
    }));
    return alias;
}
const detectCustomIcon = async (customThemeDir)=>{
    const assetsDir = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(customThemeDir, 'assets');
    const alias = {};
    if (!(0, __WEBPACK_EXTERNAL_MODULE_node_fs_5ea92f0c__.existsSync)(assetsDir)) return alias;
    const files = await (0, __WEBPACK_EXTERNAL_MODULE_tinyglobby__.glob)('*.svg', {
        cwd: assetsDir
    });
    files.forEach((file)=>{
        const name = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].basename(file, '.svg');
        alias[`@theme-assets/${name}`] = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(assetsDir, file);
    });
    return alias;
};
const presetIcons = {
    discord: '<path fill="currentColor" d="M20.317 4.37a19.8 19.8 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.3 18.3 0 0 0-5.487 0a13 13 0 0 0-.617-1.25a.08.08 0 0 0-.079-.037A19.7 19.7 0 0 0 3.677 4.37a.1.1 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.08.08 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.08.08 0 0 0 .084-.028a14 14 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13 13 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10 10 0 0 0 .372-.292a.07.07 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.07.07 0 0 1 .078.01q.181.149.373.292a.077.077 0 0 1-.006.127a12.3 12.3 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.08.08 0 0 0 .084.028a19.8 19.8 0 0 0 6.002-3.03a.08.08 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.06.06 0 0 0-.031-.03M8.02 15.33c-1.182 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418m7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418"/>',
    facebook: '<path fill="currentColor" d="M9.101 23.691v-7.98H6.627v-3.667h2.474v-1.58c0-4.085 1.848-5.978 5.858-5.978c.401 0 .955.042 1.468.103a9 9 0 0 1 1.141.195v3.325a9 9 0 0 0-.653-.036a27 27 0 0 0-.733-.009c-.707 0-1.259.096-1.675.309a1.7 1.7 0 0 0-.679.622c-.258.42-.374.995-.374 1.752v1.297h3.919l-.386 2.103l-.287 1.564h-3.246v8.245C19.396 23.238 24 18.179 24 12.044c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.628 3.874 10.35 9.101 11.647"/>',
    github: '<path fill="currentColor" d="M12 .297c-6.63 0-12 5.373-12 12c0 5.303 3.438 9.8 8.205 11.385c.6.113.82-.258.82-.577c0-.285-.01-1.04-.015-2.04c-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729c1.205.084 1.838 1.236 1.838 1.236c1.07 1.835 2.809 1.305 3.495.998c.108-.776.417-1.305.76-1.605c-2.665-.3-5.466-1.332-5.466-5.93c0-1.31.465-2.38 1.235-3.22c-.135-.303-.54-1.523.105-3.176c0 0 1.005-.322 3.3 1.23c.96-.267 1.98-.399 3-.405c1.02.006 2.04.138 3 .405c2.28-1.552 3.285-1.23 3.285-1.23c.645 1.653.24 2.873.12 3.176c.765.84 1.23 1.91 1.23 3.22c0 4.61-2.805 5.625-5.475 5.92c.42.36.81 1.096.81 2.22c0 1.606-.015 2.896-.015 3.286c0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/>',
    gitlab: '<path fill="currentColor" d="m23.6 9.593l-.033-.086L20.3.98a.85.85 0 0 0-.336-.405a.875.875 0 0 0-1 .054a.9.9 0 0 0-.29.44L16.47 7.818H7.537L5.333 1.07a.86.86 0 0 0-.29-.441a.875.875 0 0 0-1-.054a.86.86 0 0 0-.336.405L.433 9.502l-.032.086a6.066 6.066 0 0 0 2.012 7.01l.01.009l.03.021l4.977 3.727l2.462 1.863l1.5 1.132a1.01 1.01 0 0 0 1.22 0l1.499-1.132l2.461-1.863l5.006-3.75l.013-.01a6.07 6.07 0 0 0 2.01-7.002"/>',
    instagram: '<path fill="currentColor" d="M7.03.084c-1.277.06-2.149.264-2.91.563a5.9 5.9 0 0 0-2.124 1.388a5.9 5.9 0 0 0-1.38 2.127C.321 4.926.12 5.8.064 7.076s-.069 1.688-.063 4.947s.021 3.667.083 4.947c.061 1.277.264 2.149.563 2.911c.308.789.72 1.457 1.388 2.123a5.9 5.9 0 0 0 2.129 1.38c.763.295 1.636.496 2.913.552c1.278.056 1.689.069 4.947.063s3.668-.021 4.947-.082c1.28-.06 2.147-.265 2.91-.563a5.9 5.9 0 0 0 2.123-1.388a5.9 5.9 0 0 0 1.38-2.129c.295-.763.496-1.636.551-2.912c.056-1.28.07-1.69.063-4.948c-.006-3.258-.02-3.667-.081-4.947c-.06-1.28-.264-2.148-.564-2.911a5.9 5.9 0 0 0-1.387-2.123a5.9 5.9 0 0 0-2.128-1.38c-.764-.294-1.636-.496-2.914-.55C15.647.009 15.236-.006 11.977 0S8.31.021 7.03.084m.14 21.693c-1.17-.05-1.805-.245-2.228-.408a3.7 3.7 0 0 1-1.382-.895a3.7 3.7 0 0 1-.9-1.378c-.165-.423-.363-1.058-.417-2.228c-.06-1.264-.072-1.644-.08-4.848c-.006-3.204.006-3.583.061-4.848c.05-1.169.246-1.805.408-2.228c.216-.561.477-.96.895-1.382a3.7 3.7 0 0 1 1.379-.9c.423-.165 1.057-.361 2.227-.417c1.265-.06 1.644-.072 4.848-.08c3.203-.006 3.583.006 4.85.062c1.168.05 1.804.244 2.227.408c.56.216.96.475 1.382.895s.681.817.9 1.378c.165.422.362 1.056.417 2.227c.06 1.265.074 1.645.08 4.848c.005 3.203-.006 3.583-.061 4.848c-.051 1.17-.245 1.805-.408 2.23c-.216.56-.477.96-.896 1.38a3.7 3.7 0 0 1-1.378.9c-.422.165-1.058.362-2.226.418c-1.266.06-1.645.072-4.85.079s-3.582-.006-4.848-.06m9.783-16.192a1.44 1.44 0 1 0 1.437-1.442a1.44 1.44 0 0 0-1.437 1.442M5.839 12.012a6.161 6.161 0 1 0 12.323-.024a6.162 6.162 0 0 0-12.323.024M8 12.008A4 4 0 1 1 12.008 16A4 4 0 0 1 8 12.008"/>',
    linkedin: '<path fill="currentColor" d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037c-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85c3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.06 2.06 0 0 1-2.063-2.065a2.064 2.064 0 1 1 2.063 2.065m1.782 13.019H3.555V9h3.564zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0z"/>',
    slack: '<path fill="currentColor" d="M5.042 15.165a2.53 2.53 0 0 1-2.52 2.523A2.53 2.53 0 0 1 0 15.165a2.527 2.527 0 0 1 2.522-2.52h2.52zm1.271 0a2.527 2.527 0 0 1 2.521-2.52a2.527 2.527 0 0 1 2.521 2.52v6.313A2.53 2.53 0 0 1 8.834 24a2.53 2.53 0 0 1-2.521-2.522zM8.834 5.042a2.53 2.53 0 0 1-2.521-2.52A2.53 2.53 0 0 1 8.834 0a2.53 2.53 0 0 1 2.521 2.522v2.52zm0 1.271a2.53 2.53 0 0 1 2.521 2.521a2.53 2.53 0 0 1-2.521 2.521H2.522A2.53 2.53 0 0 1 0 8.834a2.53 2.53 0 0 1 2.522-2.521zm10.122 2.521a2.53 2.53 0 0 1 2.522-2.521A2.53 2.53 0 0 1 24 8.834a2.53 2.53 0 0 1-2.522 2.521h-2.522zm-1.268 0a2.53 2.53 0 0 1-2.523 2.521a2.527 2.527 0 0 1-2.52-2.521V2.522A2.527 2.527 0 0 1 15.165 0a2.53 2.53 0 0 1 2.523 2.522zm-2.523 10.122a2.53 2.53 0 0 1 2.523 2.522A2.53 2.53 0 0 1 15.165 24a2.527 2.527 0 0 1-2.52-2.522v-2.522zm0-1.268a2.527 2.527 0 0 1-2.52-2.523a2.526 2.526 0 0 1 2.52-2.52h6.313A2.527 2.527 0 0 1 24 15.165a2.53 2.53 0 0 1-2.522 2.523z"/>',
    youtube: '<path fill="currentColor" d="M23.498 6.186a3.02 3.02 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.02 3.02 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.02 3.02 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.02 3.02 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814M9.545 15.568V8.432L15.818 12z"/>',
    juejin: '<path fill="currentColor" d="m12 14.316l7.454-5.88l-2.022-1.625L12 11.1l-.004.003l-5.432-4.288l-2.02 1.624l7.452 5.88Zm0-7.247l2.89-2.298L12 2.453l-.004-.005l-2.884 2.318l2.884 2.3Zm0 11.266l-.005.002l-9.975-7.87L0 12.088l.194.156l11.803 9.308l7.463-5.885L24 12.085l-2.023-1.624Z"/>',
    qq: '<path fill="currentColor" d="M21.395 15.035a40 40 0 0 0-.803-2.264l-1.079-2.695c.001-.032.014-.562.014-.836C19.526 4.632 17.351 0 12 0S4.474 4.632 4.474 9.241c0 .274.013.804.014.836l-1.08 2.695a39 39 0 0 0-.802 2.264c-1.021 3.283-.69 4.643-.438 4.673c.54.065 2.103-2.472 2.103-2.472c0 1.469.756 3.387 2.394 4.771c-.612.188-1.363.479-1.845.835c-.434.32-.379.646-.301.778c.343.578 5.883.369 7.482.189c1.6.18 7.14.389 7.483-.189c.078-.132.132-.458-.301-.778c-.483-.356-1.233-.646-1.846-.836c1.637-1.384 2.393-3.302 2.393-4.771c0 0 1.563 2.537 2.103 2.472c.251-.03.581-1.39-.438-4.673"/>',
    wechat: '<path fill="currentColor" d="M8.691 2.188C3.891 2.188 0 5.476 0 9.53c0 2.212 1.17 4.203 3.002 5.55a.59.59 0 0 1 .213.665l-.39 1.48c-.019.07-.048.141-.048.213c0 .163.13.295.29.295a.33.33 0 0 0 .167-.054l1.903-1.114a.86.86 0 0 1 .717-.098a10.2 10.2 0 0 0 2.837.403c.276 0 .543-.027.811-.05c-.857-2.578.157-4.972 1.932-6.446c1.703-1.415 3.882-1.98 5.853-1.838c-.576-3.583-4.196-6.348-8.596-6.348M5.785 5.991c.642 0 1.162.529 1.162 1.18a1.17 1.17 0 0 1-1.162 1.178A1.17 1.17 0 0 1 4.623 7.17c0-.651.52-1.18 1.162-1.18zm5.813 0c.642 0 1.162.529 1.162 1.18a1.17 1.17 0 0 1-1.162 1.178a1.17 1.17 0 0 1-1.162-1.178c0-.651.52-1.18 1.162-1.18m5.34 2.867c-1.797-.052-3.746.512-5.28 1.786c-1.72 1.428-2.687 3.72-1.78 6.22c.942 2.453 3.666 4.229 6.884 4.229c.826 0 1.622-.12 2.361-.336a.72.72 0 0 1 .598.082l1.584.926a.3.3 0 0 0 .14.047c.134 0 .24-.111.24-.247c0-.06-.023-.12-.038-.177l-.327-1.233a.6.6 0 0 1-.023-.156a.49.49 0 0 1 .201-.398C23.024 18.48 24 16.82 24 14.98c0-3.21-2.931-5.837-6.656-6.088V8.89c-.135-.01-.27-.027-.407-.03zm-2.53 3.274c.535 0 .969.44.969.982a.976.976 0 0 1-.969.983a.976.976 0 0 1-.969-.983c0-.542.434-.982.97-.982zm4.844 0c.535 0 .969.44.969.982a.976.976 0 0 1-.969.983a.976.976 0 0 1-.969-.983c0-.542.434-.982.969-.982"/>',
    weibo: '<path fill="currentColor" d="M17.525 11.378c1.263.392 2.669 1.336 2.669 3.004c0 2.763-3.98 6.239-9.964 6.239c-4.565 0-9.23-2.213-9.23-5.852c0-1.902 1.204-4.102 3.277-6.177c2.773-2.77 6.004-4.033 7.219-2.816c.537.537.588 1.464.244 2.572c-.178.557.525.25.525.25c2.24-.938 4.196-.994 4.909.027c.38.543.343 1.306-.008 2.19c-.163.407.048.471.36.563zm-7.282 7.939c3.641-.362 6.401-2.592 6.167-4.983c-.237-2.391-3.382-4.038-7.023-3.677c-3.64.36-6.403 2.59-6.167 4.98c.237 2.394 3.382 4.039 7.023 3.68zM6.16 14.438c.754-1.527 2.712-2.39 4.446-1.94c1.793.463 2.707 2.154 1.976 3.8c-.744 1.682-2.882 2.578-4.695 1.993c-1.752-.566-2.493-2.294-1.727-3.853zm1.446 2.587c.568.257 1.325.013 1.676-.55c.346-.568.163-1.217-.407-1.459c-.563-.237-1.291.008-1.64.553c-.354.547-.189 1.202.371 1.456zm2.206-1.808c.219.092.501-.012.628-.231c.123-.22.044-.466-.178-.548c-.216-.084-.486.018-.613.232c-.123.214-.054.458.163.547zM19.873 9.5a.725.725 0 1 1-1.378-.451a1.38 1.38 0 0 0-.288-1.357a1.395 1.395 0 0 0-1.321-.425a.723.723 0 1 1-.303-1.416a2.836 2.836 0 0 1 3.29 3.649zm-3.916-6.575A5.831 5.831 0 0 1 21.5 4.72a5.836 5.836 0 0 1 1.22 5.704a.838.838 0 0 1-1.06.54a.844.844 0 0 1-.542-1.062a4.143 4.143 0 0 0-4.807-5.327a.845.845 0 0 1-.354-1.65z"/>',
    zhihu: '<path fill="currentColor" d="M5.721 0C2.251 0 0 2.25 0 5.719V18.28C0 21.751 2.252 24 5.721 24h12.56C21.751 24 24 21.75 24 18.281V5.72C24 2.249 21.75 0 18.281 0zm1.964 4.078q-.408 1.096-.68 2.11h4.587c.545-.006.445 1.168.445 1.171H9.384a58 58 0 0 1-.112 3.797h2.712c.388.023.393 1.251.393 1.266H9.183a9.2 9.2 0 0 1-.408 2.102l.757-.604c.452.456 1.512 1.712 1.906 2.177c.473.681.063 2.081.063 2.081l-2.794-3.382c-.653 2.518-1.845 3.607-1.845 3.607c-.523.468-1.58.82-2.64.516c2.218-1.73 3.44-3.917 3.667-6.497H4.491c0-.015.197-1.243.806-1.266h2.71c.024-.32.086-3.254.086-3.797H6.598c-.136.406-.158.447-.268.753c-.594 1.095-1.603 1.122-1.907 1.155c.906-1.821 1.416-3.6 1.591-4.064c.425-1.124 1.671-1.125 1.671-1.125M13.078 6h6.377v11.33h-2.573l-2.184 1.373l-.401-1.373h-1.219zm1.313 1.219v8.86h.623l.263.937l1.455-.938h1.456v-8.86z"/>',
    bilibili: '<path fill="currentColor" d="M17.813 4.653h.854q2.266.08 3.773 1.574Q23.946 7.72 24 9.987v7.36q-.054 2.266-1.56 3.773c-1.506 1.507-2.262 1.524-3.773 1.56H5.333q-2.266-.054-3.773-1.56C.053 19.614.036 18.858 0 17.347v-7.36q.054-2.267 1.56-3.76t3.773-1.574h.774l-1.174-1.12a1.23 1.23 0 0 1-.373-.906q0-.534.373-.907l.027-.027q.4-.373.92-.373t.92.373L9.653 4.44q.107.106.187.213h4.267a.8.8 0 0 1 .16-.213l2.853-2.747q.4-.373.92-.373c.347 0 .662.151.929.4s.391.551.391.907q0 .532-.373.906zM5.333 7.24q-1.12.027-1.88.773q-.76.748-.786 1.894v7.52q.026 1.146.786 1.893t1.88.773h13.334q1.12-.026 1.88-.773t.786-1.893v-7.52q-.026-1.147-.786-1.894t-1.88-.773zM8 11.107q.56 0 .933.373q.375.374.4.96v1.173q-.025.586-.4.96q-.373.375-.933.374c-.56-.001-.684-.125-.933-.374q-.375-.373-.4-.96V12.44q0-.56.386-.947q.387-.386.947-.386m8 0q.56 0 .933.373q.375.374.4.96v1.173q-.025.586-.4.96q-.373.375-.933.374c-.56-.001-.684-.125-.933-.374q-.375-.373-.4-.96V12.44q.025-.586.4-.96q.373-.373.933-.373"/>',
    lark: `<path d="M8.813 5.477c1.038.836 2.286 2.045 3.3 3.495.171.23.377.576.457.71l.034.056a8.803 8.803 0 0 0-.922 1.3l-.271-.494C9.655 7.53 6.3 5.477 6.137 5.377a.447.447 0 0 1-.006-.004l-.666-.393-.107-.086a.499.499 0 0 1 .306-.885L6.084 4h7.997c.159.006.318.037.47.092.174.064.317.174.458.308.134.143.272.296.403.448.622.675 1.324 1.688 1.324 1.688-.573.193-1.349.736-1.349.736a5.095 5.095 0 0 0-.348-.54 20.665 20.665 0 0 0-1.037-1.255H8.813Z" fill="currentColor"/>
  <path d="M18.482 7.507a5.42 5.42 0 0 1 4.04.717c.248.168.788.635.242 1.233-1.7 1.67-2.194 3.225-2.63 4.599-.278.873-.541 1.697-1.066 2.424-1.813 2.508-4.114 4-6.837 4.434-.561.089-1.132.131-1.7.131-3.958 0-7.498-2.035-8.75-2.844h.003l-.161-.107c-.534-.378-.61-.723-.623-.989V7.055a.486.486 0 0 1 .827-.317l.482.589c5.082 6.201 9.126 8.063 11.626 8.53 2.246.424 3.631-.165 4.022-.37.333-.51.534-1.143.764-1.865l.006-.021c.406-1.276.898-2.821 2.322-4.477a3.93 3.93 0 0 0-2.28-.168c-1.761.394-3.403 1.96-4.89 4.643a8.27 8.27 0 0 0-.341.671c-.724-.107-1.334-.65-1.334-.65.128-.269.22-.455.345-.672 1.718-3.125 3.714-4.962 5.933-5.441ZM2.477 16.889c1.145.744 5.341 3.232 9.532 2.563 1.56-.247 2.963-.915 4.196-1.99-2.771.254-7.557-.753-13.728-7.666v7.093Z" fill="currentColor"/>`,
    x: '<path fill="currentColor" d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584l-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"/>',
    bluesky: '<path fill="currentColor" d="M12 10.8c-1.087-2.114-4.046-6.053-6.798-7.995C2.566.944 1.561 1.266.902 1.565C.139 1.908 0 3.08 0 3.768c0 .69.378 5.65.624 6.479c.815 2.736 3.713 3.66 6.383 3.364q.204-.03.415-.056q-.207.033-.415.056c-3.912.58-7.387 2.005-2.83 7.078c5.013 5.19 6.87-1.113 7.823-4.308c.953 3.195 2.05 9.271 7.733 4.308c4.267-4.308 1.172-6.498-2.74-7.078a9 9 0 0 1-.415-.056q.21.026.415.056c2.67.297 5.568-.628 6.383-3.364c.246-.828.624-5.79.624-6.478c0-.69-.139-1.861-.902-2.206c-.659-.298-1.664-.62-4.3 1.24C16.046 4.748 13.087 8.687 12 10.8"/>'
};
const formatIconName = (icon)=>icon.toLowerCase();
function getSocialIcons(socialLinks = []) {
    const icons = {};
    for (const link of socialLinks)if ('string' == typeof link.icon) {
        const pathContent = presetIcons[formatIconName(link.icon)];
        icons[link.icon] = `<svg xmlns="http://www.w3.org/2000/svg" width="100%" viewBox="0 0 24 24">${pathContent}</svg>`;
    }
    return icons;
}
function isPluginIncluded(config, pluginName) {
    var _config_builderPlugins, _config_builderConfig_plugins, _config_builderConfig;
    return Boolean((null == (_config_builderPlugins = config.builderPlugins) ? void 0 : _config_builderPlugins.some((plugin)=>plugin.name === pluginName)) || (null == (_config_builderConfig = config.builderConfig) ? void 0 : null == (_config_builderConfig_plugins = _config_builderConfig.plugins) ? void 0 : _config_builderConfig_plugins.some((plugin)=>plugin && plugin.name === pluginName)));
}
async function createInternalBuildConfig(userDocRoot, config, enableSSG, routeService, pluginDriver, runtimeTempDir) {
    var _config_builderConfig_output, _config_builderConfig, _config_themeConfig, _config_themeConfig1;
    const cwd = process.cwd();
    const CUSTOM_THEME_DIR = (null == config ? void 0 : config.themeDir) ?? __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(process.cwd(), 'theme');
    const baseOutDir = (null == config ? void 0 : config.outDir) ?? OUTPUT_DIR;
    const csrOutDir = baseOutDir;
    const ssrOutDir = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(baseOutDir, '__ssg__');
    const DEFAULT_THEME = require.resolve('@rspress/theme-default');
    const base = (null == config ? void 0 : config.base) ?? '';
    const assetPrefix = isProduction() ? (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.removeTrailingSlash)((null == config ? void 0 : null == (_config_builderConfig = config.builderConfig) ? void 0 : null == (_config_builderConfig_output = _config_builderConfig.output) ? void 0 : _config_builderConfig_output.assetPrefix) ?? base) : '';
    const reactVersion = await detectReactVersion();
    const normalizeIcon = (icon)=>{
        if (!icon) return;
        icon = icon.toString();
        if (icon.startsWith('file://')) icon = (0, __WEBPACK_EXTERNAL_MODULE_node_url_e96de089__.fileURLToPath)(icon);
        else if (__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].isAbsolute(icon)) return __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(userDocRoot, PUBLIC_DIR, icon);
        return icon;
    };
    const [detectCustomIconAlias, reactCSRAlias, reactSSRAlias] = await Promise.all([
        detectCustomIcon(CUSTOM_THEME_DIR),
        resolveReactAlias(reactVersion, false),
        enableSSG ? resolveReactAlias(reactVersion, true) : Promise.resolve({})
    ]);
    return {
        plugins: [
            ...isPluginIncluded(config, __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_react_7b149ee4__.PLUGIN_REACT_NAME) ? [] : [
                (0, __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_react_7b149ee4__.pluginReact)()
            ],
            ...isPluginIncluded(config, __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_sass_b13a7d33__.PLUGIN_SASS_NAME) ? [] : [
                (0, __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_sass_b13a7d33__.pluginSass)()
            ],
            ...isPluginIncluded(config, __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_less_4c557a99__.PLUGIN_LESS_NAME) ? [] : [
                (0, __WEBPACK_EXTERNAL_MODULE__rsbuild_plugin_less_4c557a99__.pluginLess)()
            ],
            rsbuildPluginDocVM({
                userDocRoot,
                config,
                runtimeTempDir,
                routeService,
                pluginDriver
            })
        ],
        server: {
            port: !isProduction() && process.env.PORT ? Number(process.env.PORT) : void 0,
            printUrls: ({ urls })=>urls.map((url)=>`${url}/${(0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.removeLeadingSlash)(base)}`),
            publicDir: {
                name: __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(userDocRoot, PUBLIC_DIR)
            }
        },
        dev: {
            progressBar: false,
            setupMiddlewares: [
                (middlewares)=>{
                    middlewares.unshift(serveSearchIndexMiddleware(config));
                }
            ],
            cliShortcuts: {
                custom: (shortcuts)=>shortcuts.filter(({ key })=>'r' !== key)
            }
        },
        html: {
            title: (null == config ? void 0 : config.title) ?? DEFAULT_TITLE,
            favicon: normalizeIcon(null == config ? void 0 : config.icon),
            template: __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(PACKAGE_ROOT, 'index.html'),
            tags: [
                (null == (_config_themeConfig = config.themeConfig) ? void 0 : _config_themeConfig.darkMode) !== false ? {
                    tag: "script",
                    children: inlineThemeScript,
                    append: false
                } : null
            ].filter(Boolean)
        },
        output: {
            assetPrefix,
            distPath: {
                root: csrOutDir
            }
        },
        resolve: {
            alias: {
                ...detectCustomIconAlias,
                '@mdx-js/react': require.resolve('@mdx-js/react'),
                '@theme': [
                    CUSTOM_THEME_DIR,
                    DEFAULT_THEME
                ],
                '@theme-assets': __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(DEFAULT_THEME, '../assets'),
                '@rspress/core': PACKAGE_ROOT,
                'react-lazy-with-preload': require.resolve('react-lazy-with-preload'),
                'react-syntax-highlighter': __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].dirname(require.resolve('react-syntax-highlighter/package.json'))
            }
        },
        source: {
            include: [
                PACKAGE_ROOT,
                __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(cwd, 'node_modules', __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.RSPRESS_TEMP_DIR)
            ],
            define: {
                'process.env.__REACT_GTE_18__': JSON.stringify(reactVersion >= 18),
                'process.env.TEST': JSON.stringify(process.env.TEST),
                'process.env.RSPRESS_SOCIAL_ICONS': JSON.stringify(getSocialIcons(null == (_config_themeConfig1 = config.themeConfig) ? void 0 : _config_themeConfig1.socialLinks))
            }
        },
        performance: {
            chunkSplit: {
                override: {
                    cacheGroups: {
                        styles: {
                            name: 'styles',
                            minSize: 0,
                            chunks: 'all',
                            test: /\.(?:css|less|sass|scss)$/,
                            priority: 99
                        }
                    }
                }
            }
        },
        tools: {
            bundlerChain (chain, { CHAIN_ID, target }) {
                var _config_markdown;
                const isServer = 'node' === target;
                const jsModuleRule = chain.module.rule(CHAIN_ID.RULE.JS);
                const swcLoaderOptions = jsModuleRule.use(CHAIN_ID.USE.SWC).get('options');
                const checkDeadLinks = ((null == config ? void 0 : null == (_config_markdown = config.markdown) ? void 0 : _config_markdown.checkDeadLinks) && !isServer) ?? false;
                chain.module.rule('MDX').type("javascript/auto").test(__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.MDX_OR_MD_REGEXP).resolve.merge({
                    conditionNames: jsModuleRule.resolve.conditionNames.values(),
                    mainFields: jsModuleRule.resolve.mainFields.values()
                }).end().oneOf('MDXCompile').use('builtin:swc-loader').loader('builtin:swc-loader').options(swcLoaderOptions).end().use('mdx-loader').loader(require.resolve('./loader.js')).options({
                    config,
                    docDirectory: userDocRoot,
                    checkDeadLinks,
                    routeService,
                    pluginDriver
                }).end();
                if (chain.plugins.has(CHAIN_ID.PLUGIN.REACT_FAST_REFRESH)) chain.plugin(CHAIN_ID.PLUGIN.REACT_FAST_REFRESH).tap((options)=>{
                    options[0] ??= {};
                    options[0].include = [
                        /\.([cm]js|[jt]sx?|flow)$/i,
                        __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.MDX_OR_MD_REGEXP
                    ];
                    return options;
                });
                chain.resolve.extensions.prepend('.md').prepend('.mdx').prepend('.mjs');
                chain.module.rule('css-virtual-module').test(/\.rspress[\\/]runtime[\\/]virtual-global-styles/).merge({
                    sideEffects: true
                });
                if (isServer) chain.output.filename('main.cjs');
                const enableIncremental = !isProduction() && !process.env.DISABLE_RSPACK_INCREMENTAL;
                if (enableIncremental) chain.merge({
                    experiments: {
                        incremental: true
                    }
                });
            }
        },
        environments: {
            web: {
                resolve: {
                    alias: {
                        ...reactCSRAlias,
                        __VIRTUAL_ROUTES__: 'virtual-routes'
                    }
                },
                source: {
                    entry: {
                        index: CLIENT_ENTRY
                    },
                    define: {
                        'process.env.__SSR__': JSON.stringify(false)
                    }
                },
                output: {
                    target: 'web',
                    distPath: {
                        root: csrOutDir
                    }
                }
            },
            ...enableSSG ? {
                node: {
                    resolve: {
                        alias: {
                            ...reactSSRAlias,
                            __VIRTUAL_ROUTES__: 'virtual-routes-ssr'
                        }
                    },
                    source: {
                        entry: {
                            index: SSR_ENTRY
                        },
                        define: {
                            'process.env.__SSR__': JSON.stringify(true)
                        }
                    },
                    performance: {
                        printFileSize: (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.isDebugMode)()
                    },
                    output: {
                        emitAssets: false,
                        target: 'node',
                        distPath: {
                            root: ssrOutDir
                        },
                        minify: false
                    }
                }
            } : {}
        }
    };
}
async function initRsbuild(rootDir, config, pluginDriver, enableSSG, extraRsbuildConfig) {
    var _pluginDriver_getPlugins;
    const cwd = process.cwd();
    const userDocRoot = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].resolve(rootDir || (null == config ? void 0 : config.root) || cwd);
    const builderPlugins = (null == config ? void 0 : config.builderPlugins) ?? [];
    const runtimeTempDir = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(__WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.RSPRESS_TEMP_DIR, 'runtime');
    const runtimeAbsTempDir = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(cwd, 'node_modules', runtimeTempDir);
    await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].mkdir(runtimeAbsTempDir, {
        recursive: true
    });
    const routeService = await initRouteService({
        config,
        runtimeTempDir: runtimeAbsTempDir,
        scanDir: userDocRoot,
        pluginDriver
    });
    const { createRsbuild, mergeRsbuildConfig } = await import("@rsbuild/core");
    const internalRsbuildConfig = await createInternalBuildConfig(userDocRoot, config, enableSSG, routeService, pluginDriver, runtimeTempDir);
    const rsbuild = await createRsbuild({
        callerName: 'rspress',
        rsbuildConfig: mergeRsbuildConfig(internalRsbuildConfig, ...(null == (_pluginDriver_getPlugins = pluginDriver.getPlugins()) ? void 0 : _pluginDriver_getPlugins.map((plugin)=>plugin.builderConfig ?? {})) || [], (null == config ? void 0 : config.builderConfig) || {}, extraRsbuildConfig || {})
    });
    rsbuild.addPlugins(builderPlugins);
    return rsbuild;
}
function checkLanguageParity_normalizePath(filePath) {
    return filePath.split(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].sep).join('/');
}
async function getAllMarkdownFilesFrom(dirPath) {
    const files = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].readdir(dirPath, {
        withFileTypes: true
    });
    const allFiles = [];
    for (const file of files){
        const fullPath = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(dirPath, file.name);
        if (file.isDirectory()) {
            const nestedFiles = await getAllMarkdownFilesFrom(fullPath);
            allFiles.push(...nestedFiles);
        } else if ([
            '.md',
            '.mdx'
        ].includes(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].extname(file.name))) allFiles.push(fullPath);
    }
    return allFiles;
}
async function collectModuleFiles(contentPath, lang, includedDir, excludedDirs, fileLangMap) {
    const langDirPath = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(contentPath, lang);
    const langModuleDir = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(langDirPath, includedDir);
    try {
        const moduleDirStats = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].stat(langModuleDir);
        if (!moduleDirStats.isDirectory()) return fileLangMap;
        const files = await getAllMarkdownFilesFrom(langModuleDir);
        for (const file of files){
            const relativePath = checkLanguageParity_normalizePath(__WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].relative(langDirPath, file));
            if (excludedDirs.some((excludedDir)=>{
                const isFilePath = /\.(md|mdx)$/.test(excludedDir);
                return relativePath.includes(excludedDir + (isFilePath ? '' : '/'));
            })) continue;
            const baseName = relativePath;
            if (!fileLangMap[baseName]) fileLangMap[baseName] = new Set();
            fileLangMap[baseName].add(lang);
        }
    } catch (e) {
        __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.error(e);
        throw new Error(`Failed to access directory: ${checkLanguageParity_normalizePath(langModuleDir)}`);
    }
    return fileLangMap;
}
async function checkLanguageParity(config) {
    var _config_languageParity_include, _this, _config_themeConfig;
    if (!(null == config ? void 0 : config.languageParity) || false === config.languageParity.enabled) return;
    __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.info('Checking language parity...');
    const contentPath = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].resolve(config.root);
    const includedDirs = (null == (_config_languageParity_include = config.languageParity.include) ? void 0 : _config_languageParity_include.length) ? config.languageParity.include : [
        ''
    ];
    const excludedDirs = config.languageParity.exclude ?? [];
    const supportedLanguages = (null == (_this = config.locales ?? (null == (_config_themeConfig = config.themeConfig) ? void 0 : _config_themeConfig.locales)) ? void 0 : _this.map((locale)=>locale.lang)) || [];
    if (!supportedLanguages.length) return void __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.error('No supported languages found in the configuration.');
    const missingLanguagesFile = [];
    try {
        for (const includedDir of includedDirs){
            if (excludedDirs.some((excludedDir)=>excludedDir === includedDir)) continue;
            const curFileLangMap = {};
            for (const lang of supportedLanguages)await collectModuleFiles(contentPath, lang, includedDir, excludedDirs, curFileLangMap);
            for (const [baseName, langs] of Object.entries(curFileLangMap)){
                const missingLangs = supportedLanguages.filter((lang)=>!langs.has(lang));
                missingLangs.forEach((lang)=>{
                    const missingPath = __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__["default"].join(lang, baseName);
                    missingLanguagesFile.push(missingPath);
                });
            }
        }
        if (missingLanguagesFile.length > 0) throw new Error(`Check language parity failed! Missing content:\n${missingLanguagesFile.map((file)=>`        - ${checkLanguageParity_normalizePath(file)}`).join('\n')}`);
        __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.success('Language parity checked successfully.');
    } catch (err) {
        __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.error('Error during language parity check: \n', err);
        throw err;
    }
}
async function dev(options) {
    const { docDirectory, config, extraBuilderConfig } = options;
    const isProd = false;
    const pluginDriver = new PluginDriver(config, isProd);
    await pluginDriver.init();
    const modifiedConfig = await pluginDriver.modifyConfig();
    try {
        await pluginDriver.beforeBuild();
        const builder = await initRsbuild(docDirectory, modifiedConfig, pluginDriver, false, extraBuilderConfig);
        builder.onDevCompileDone(async ()=>{
            await pluginDriver.afterBuild();
        });
        const { server } = await builder.startDevServer({
            getPortSilently: true
        });
        return server;
    } finally{
        await writeSearchIndex(modifiedConfig);
        await checkLanguageParity(modifiedConfig);
    }
}
var package_namespaceObject = {
    i8: "1.45.6"
};
async function renderFrontmatterHead(route) {
    if (!isRouteMeta(route)) return '';
    const content = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].readFile(route.absolutePath, {
        encoding: 'utf-8'
    });
    const { frontmatter: { head } } = (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_node_utils_78947ce6__.loadFrontMatter)(content, route.absolutePath, '', true);
    if (!head || 0 === head.length) return '';
    return head.map(([tag, attrs])=>`<${tag} ${renderAttrs(attrs)}>`).join('');
}
async function renderConfigHead(config, route) {
    if (!isRouteMeta(route)) return '';
    if (!config.head || 0 === config.head.length) return '';
    return config.head.map((head)=>{
        if ('string' == typeof head) return head;
        if ('function' == typeof head) {
            const resultHead = head(route);
            if (!resultHead) return '';
            if ('string' == typeof resultHead) return resultHead;
            return `<${resultHead[0]} ${renderAttrs(resultHead[1])}>`;
        }
        return `<${head[0]} ${renderAttrs(head[1])}>`;
    }).join('');
}
function renderAttrs(attrs) {
    return Object.entries(attrs).map(([key, value])=>{
        if ('boolean' == typeof value) return key;
        if ('string' == typeof value || 'number' == typeof value) return `${key}="${value}"`;
        throw new Error(`Invalid value for attribute ${key}:${JSON.stringify(value)}`);
    }).join('');
}
function isRouteMeta(route) {
    return !!route && 'object' == typeof route && 'routePath' in route && 'absolutePath' in route;
}
async function bundle(docDirectory, config, pluginDriver, enableSSG) {
    try {
        const rsbuild = await initRsbuild(docDirectory, config, pluginDriver, enableSSG);
        await rsbuild.build();
    } finally{
        await writeSearchIndex(config);
        await checkLanguageParity(config);
    }
}
function emptyDir(path) {
    return __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].rm(path, {
        force: true,
        recursive: true
    });
}
async function renderPages(appDirectory, config, pluginDriver, ssgConfig) {
    __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.info('Rendering pages...');
    const startTime = Date.now();
    const outputPath = (null == config ? void 0 : config.outDir) ?? (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(appDirectory, OUTPUT_DIR);
    const ssrBundlePath = (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(outputPath, '__ssg__', 'main.cjs');
    try {
        let render;
        if (ssgConfig) try {
            const { default: ssrExports } = await import((0, __WEBPACK_EXTERNAL_MODULE_node_url_e96de089__.pathToFileURL)(ssrBundlePath).toString());
            ({ render } = ssrExports);
        } catch (e) {
            if ('object' == typeof ssgConfig && ssgConfig.strict) {
                __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.error(`Failed to load SSG bundle: ${__WEBPACK_EXTERNAL_MODULE_picocolors__["default"].yellow(ssrBundlePath)}.`);
                throw e;
            }
            __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.error(e);
            __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.warn(`Failed to load SSG bundle: ${__WEBPACK_EXTERNAL_MODULE_picocolors__["default"].yellow(ssrBundlePath)}, fallback to CSR.`);
        }
        const routes = init_routeService.getRoutes();
        const base = (null == config ? void 0 : config.base) ?? '';
        const htmlTemplatePath = (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(outputPath, 'index.html');
        const htmlTemplate = await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].readFile(htmlTemplatePath, 'utf-8');
        const additionalRoutes = (await pluginDriver.addSSGRoutes()).map((route)=>({
                routePath: (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.withBase)(route.path, base)
            }));
        const allRoutes = [
            ...routes,
            ...additionalRoutes
        ];
        const is404RouteInRoutes = allRoutes.some((route)=>'/404' === route.routePath);
        if (!is404RouteInRoutes) allRoutes.push({
            routePath: '/404'
        });
        await Promise.all(allRoutes.filter((route)=>!route.routePath.includes(':')).map(async (route)=>{
            const helmetContext = new __WEBPACK_EXTERNAL_MODULE_react_helmet_async_048d06c6__.HelmetData({});
            const { routePath } = route;
            let appHtml = '';
            if (render) try {
                ({ appHtml } = await render(routePath, helmetContext.context));
            } catch (e) {
                if ('object' == typeof ssgConfig && ssgConfig.strict) {
                    __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.error(`Page "${__WEBPACK_EXTERNAL_MODULE_picocolors__["default"].yellow(routePath)}" SSG rendering failed.`);
                    throw e;
                }
                __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.warn(`Page "${__WEBPACK_EXTERNAL_MODULE_picocolors__["default"].yellow(routePath)}" SSG rendering error, fallback to CSR.`, e);
            }
            const { helmet } = helmetContext.context;
            let html = htmlTemplate.replace(/<title>(.*?)<\/title>/gi, '').replace(APP_HTML_MARKER, ()=>appHtml).replace(META_GENERATOR, ()=>`<meta name="generator" content="Rspress v${package_namespaceObject.i8}">`).replace(HEAD_MARKER, [
                await renderConfigHead(config, route),
                helmet.title.toString(),
                helmet.meta.toString(),
                helmet.link.toString(),
                helmet.style.toString(),
                helmet.script.toString(),
                await renderFrontmatterHead(route)
            ].join(''));
            if (helmet.htmlAttributes) {
                var _helmet_htmlAttributes;
                html = html.replace(HTML_START_TAG, `${HTML_START_TAG} ${null == (_helmet_htmlAttributes = helmet.htmlAttributes) ? void 0 : _helmet_htmlAttributes.toString()}`);
            }
            if (helmet.bodyAttributes) {
                var _helmet_bodyAttributes;
                html = html.replace(BODY_START_TAG, `${BODY_START_TAG} ${null == (_helmet_bodyAttributes = helmet.bodyAttributes) ? void 0 : _helmet_bodyAttributes.toString()}`);
            }
            const normalizeHtmlFilePath = (path)=>{
                const normalizedBase = (0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.normalizeSlash)((null == config ? void 0 : config.base) || '/');
                if (path.endsWith('/')) return `${path}index.html`.replace(normalizedBase, '');
                return `${path}.html`.replace(normalizedBase, '');
            };
            const fileName = normalizeHtmlFilePath(routePath);
            await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].mkdir((0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(outputPath, (0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.dirname)(fileName)), {
                recursive: true
            });
            await __WEBPACK_EXTERNAL_MODULE_node_fs_promises_153e37e0__["default"].writeFile((0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(outputPath, fileName), html);
        }));
        if (!(0, __WEBPACK_EXTERNAL_MODULE__rspress_shared_baa012d0__.isDebugMode)()) await emptyDir((0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(outputPath, '__ssg__'));
        await emptyDir((0, __WEBPACK_EXTERNAL_MODULE_node_path_c5b9b54f__.join)(outputPath, 'html'));
        const totalTime = Date.now() - startTime;
        __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.success(`Pages rendered in ${__WEBPACK_EXTERNAL_MODULE_picocolors__["default"].yellow(totalTime)} ms.`);
    } catch (e) {
        if (e instanceof Error) __WEBPACK_EXTERNAL_MODULE__rspress_shared_logger_4374e44a__.logger.error(`Pages render error: ${e.stack}`);
        throw e;
    }
}
async function build(options) {
    const { docDirectory, appDirectory, config } = options;
    const pluginDriver = new PluginDriver(config, true);
    await pluginDriver.init();
    const modifiedConfig = await pluginDriver.modifyConfig();
    await pluginDriver.beforeBuild();
    const ssgConfig = modifiedConfig.ssg ?? true;
    await emptyDir(TEMP_DIR);
    await bundle(docDirectory, modifiedConfig, pluginDriver, Boolean(ssgConfig));
    await renderPages(appDirectory, modifiedConfig, pluginDriver, ssgConfig);
    await pluginDriver.afterBuild();
}
async function serve(options) {
    var _builderConfig_server, _builderConfig_server1;
    const { config, port: userPort, host: userHost } = options;
    const envPort = process.env.PORT;
    const envHost = process.env.HOST;
    const { builderConfig } = config;
    const port = Number(envPort || userPort || (null == builderConfig ? void 0 : null == (_builderConfig_server = builderConfig.server) ? void 0 : _builderConfig_server.port) || 4173);
    const host = envHost || userHost || (null == builderConfig ? void 0 : null == (_builderConfig_server1 = builderConfig.server) ? void 0 : _builderConfig_server1.host) || 'localhost';
    config.builderConfig = (0, __WEBPACK_EXTERNAL_MODULE__rsbuild_core_1b356efc__.mergeRsbuildConfig)(builderConfig, {
        server: {
            port,
            host
        }
    });
    const pluginDriver = new PluginDriver(config, true);
    await pluginDriver.init();
    const modifiedConfig = await pluginDriver.modifyConfig();
    const builder = await initRsbuild(config.root, modifiedConfig, pluginDriver, false);
    return builder.preview();
}
var __webpack_exports__mergeDocConfig = __WEBPACK_EXTERNAL_MODULE__rspress_shared_node_utils_78947ce6__.mergeDocConfig;
export { build, dev, serve, __webpack_exports__mergeDocConfig as mergeDocConfig };
